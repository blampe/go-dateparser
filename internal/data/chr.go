// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var chr_Locale = merge(nil, LocaleData{
	Name:      "chr",
	DateOrder: "MDY",
	Charset:   []rune(`cgtuzᏸᏹᏼꭰꭱꭲꭴꭵꭶꭷꭸꭹꭺꭻꭼꭽꭿꮂꮄꮅꮆꮇꮈꮎꮑꮒꮓꮕꮖꮘꮙꮚꮜꮝꮞꮠꮡꮢꮣꮤꮥꮧꮨꮩꮪꮫꮯꮲꮵꮶꮷꮼꮿ`),
	Translations: map[string]string{
		"ꭴꮥꮨᏼꮜꮧꮢꭲ": "year",
		"ꭲꮿꮤꮼꮝꮤꮕ":  "minute",
		"ꭴꮎꮩꮣꮙꮕꭿ":  "monday",
		"ꭴꮎꮩꮣꮘꮥꮎ":  "saturday",
		"ꭴꮎꮩꮣꮖꮝꭼ":  "sunday",
		"ꮢꮎꮩꮣꮖꮝꮧ":  "week",
		"ꮷꮎꭹꮆꮝꮧ":   "friday",
		"ꮢꭿᏹꭲꮧꮲ":   "pm",
		"ꭴꮓꮈꮤꮕ":    "january",
		"ꭰꮒꮝꭼꮨ":    "may",
		"ꮕꭹꮑꭲꭶ":    "thursday",
		"ꮤꮅꮑꭲꭶ":    "tuesday",
		"ꮶꭲꮑꭲꭶ":    "wednesday",
		"ꭵꮝꭹᏹ":     "december",
		"ꮡꮯꮆꮣ":     "hour",
		"ꭻᏸꮙꮒ":     "july",
		"ꮥꭽꮇᏹ":     "june",
		"ꮕꮣꮥꮖ":     "november",
		"ꮪꮒꮕꮧ":     "october",
		"ꮪꮅꮝꮧ":     "september",
		"ꮜꮎꮄ":      "am",
		"ꭷꮼꮒ":      "april",
		"ꭶꮆꮒ":      "august",
		"ꭷꭶꮅ":      "february",
		"ꮷꮎꭹ":      "friday",
		"gmt":      "gmt",
		"ꭰꮕᏹ":      "march",
		"ꭲꮿꮤ":      "minute",
		"ꮙꮕꭿ":      "monday",
		"ꭷꮈꭲ":      "month",
		"ꮘꮥꮎ":      "saturday",
		"ꭰꮞꮲ":      "second",
		"ꮖꮝꭼ":      "sunday",
		"ꮕꭹꮑ":      "thursday",
		"ꮤꮅꮑ":      "tuesday",
		"utc":      "utc",
		"ꮶꭲꮑ":      "wednesday",
		"am":       "am",
		"ꭷꮼ":       "april",
		"ꭶꮆ":       "august",
		"ꭲꭶ":       "day",
		"ꭵꮝ":       "december",
		"ꭷꭶ":       "february",
		"ꮡꮯ":       "hour",
		"ꭴꮓ":       "january",
		"ꭻᏸ":       "july",
		"ꮥꭽ":       "june",
		"ꭰꮕ":       "march",
		"ꭰꮒ":       "may",
		"ꭷꮈ":       "month",
		"ꮕꮣ":       "november",
		"ꮪꮒ":       "october",
		"pm":       "pm",
		"ꮪꮅ":       "september",
		"ꮢꮎ":       "week",
		"ꭴꮥ":       "year",
		"'":        "",
		",":        "",
		";":        "",
		"@":        "",
		"[":        "",
		"]":        "",
		"|":        "",
		" ":        " ",
		"+":        "+",
		"-":        "-",
		".":        ".",
		"/":        "/",
		":":        ":",
		"z":        "z",
	},
	RelativeType: map[string]string{
		"ꭿꭰ ꭲꮿꮤꮼꮝꮤꮕ": "0 minute ago",
		"ꭿꭰ ꮷꮥꮨᏼꮢꮨ":  "0 year ago",
		"ꭿꭰ ꮡꮯꮆꮣ":    "0 hour ago",
		"ꭿꭰ ꭰꮅꮅꮜ":    "0 week ago",
		"ꭷꮈꭲ ꮵꭸꮢ":    "1 month ago",
		"ꮵꮫꮅᏹꮅꮢꭲ":    "1 week ago",
		"ꮤꮅꮑ ꭷꮈꭲ":    "in 1 month",
		"ꭿꭰ ꭷꮈꭲ":     "0 month ago",
		"ꭱꮨ ꮵꭸꮢ":     "1 year ago",
		"ꭺꭿ ꭲꭶ":      "0 day ago",
		"ꮠꮖꮄꮕꮂ":      "in 1 week",
		"ꮜꮎꮄꭲ":       "in 1 day",
		"ꭱꮨᏼꭲ":       "in 1 year",
		"ꮓꮚ":         "0 second ago",
		"ꮢꭿ":         "1 day ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲᏻꮎꮩꮣꮖꮝꮧ ꮵꭸꮢ`), "$1 week ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲꮿꮤꮼꮝꮤꮕ ꮵꭸꮢ`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮢꮎꮩꮣꮖꮝꮧ ꮵꭸꮢ`), "$1 week ago"},
		{regexp.MustCompile(`(?i)(\d+) ꭿꮈꮝꭹ ꮷꮢꭿꮫ ꮵꭸꮢ`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+) ꭲꮷꮥꮨᏼꮜꮧꮢꭲ ꮵꭸꮢ`), "$1 year ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮣꮣꮎꮹꮝꭼ ꮵꭸꮢ`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+) ꭴꮥꮨᏼꮜꮧꮢꭲ ꮵꭸꮢ`), "$1 year ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭿꮈꮝꭹ ꮷꮢꭿꮫ`), "in $1 day"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲꮷꮥꮨᏼꮜꮧꮢꭲ`), "in $1 year"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮧꭷꮈꭲ ꮵꭸꮢ`), "$1 month ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲᏻꮎꮩꮣꮖꮝꮧ`), "in $1 week"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭴꮥꮨᏼꮜꮧꮢꭲ`), "in $1 year"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲꮿꮤ ꮵꭸꮢ`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭷꮈꭲ ꮵꭸꮢ`), "$1 month ago"},
		{regexp.MustCompile(`(?i)(\d+) ꮣꮣꮎꮹꮝꭼ ꮵꭸꮢ`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲꮿꮤꮼꮝꮤꮕ`), "in $1 minute"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮢꮎꮩꮣꮖꮝꮧ`), "in $1 week"},
		{regexp.MustCompile(`(?i)(\d+) ꭲᏻꮯꮆꮣ ꮵꭸꮢ`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮡꮯ ꮵꭸꮢ`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭷꮈ ꮵꭸꮢ`), "$1 month ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮢꮎ ꮵꭸꮢ`), "$1 week ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭴꮥ ꮵꭸꮢ`), "$1 year ago"},
		{regexp.MustCompile(`(?i)(\d+) ꮡꮯꮆꮣ ꮵꭸꮢ`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲᏻꮯꮆꮣ`), "in $1 hour"},
		{regexp.MustCompile(`(?i)(\d+) ꭰꮞꮲ ꮵꭸꮢ`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮡꮯꮆꮣ`), "in $1 hour"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮧꭷꮈꭲ`), "in $1 month"},
		{regexp.MustCompile(`(?i)(\d+) ꭲꭶ ꮵꭸꮢ`), "$1 day ago"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲꮿꮤ`), "in $1 minute"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭷꮈꭲ`), "in $1 month"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭰꮞꮲ`), "in $1 second"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭲꭶ`), "in $1 day"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮡꮯ`), "in $1 hour"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭷꮈ`), "in $1 month"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꮢꮎ`), "in $1 week"},
		{regexp.MustCompile(`(?i)ꮎꮏ (\d+) ꭴꮥ`), "in $1 year"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(ꮎꮏ \d+ ꭲᏻꮎꮩꮣꮖꮝꮧ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮿꮤꮼꮝꮤꮕ ꮵꭸꮢ|ꮎꮏ \d+ ꮢꮎꮩꮣꮖꮝꮧ ꮵꭸꮢ|\d+ ꭲꮷꮥꮨᏼꮜꮧꮢꭲ ꮵꭸꮢ|\d+ ꭿꮈꮝꭹ ꮷꮢꭿꮫ ꮵꭸꮢ|ꮎꮏ \d+ ꮣꮣꮎꮹꮝꭼ ꮵꭸꮢ|\d+ ꭴꮥꮨᏼꮜꮧꮢꭲ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮷꮥꮨᏼꮜꮧꮢꭲ|ꮎꮏ \d+ ꭿꮈꮝꭹ ꮷꮢꭿꮫ|ꮎꮏ \d+ ꭲᏻꮎꮩꮣꮖꮝꮧ|ꮎꮏ \d+ ꭴꮥꮨᏼꮜꮧꮢꭲ|ꮎꮏ \d+ ꮧꭷꮈꭲ ꮵꭸꮢ|\d+ ꮣꮣꮎꮹꮝꭼ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮿꮤ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮿꮤꮼꮝꮤꮕ|ꮎꮏ \d+ ꭷꮈꭲ ꮵꭸꮢ|ꮎꮏ \d+ ꮢꮎꮩꮣꮖꮝꮧ|\d+ ꭲᏻꮯꮆꮣ ꮵꭸꮢ|ꮎꮏ \d+ ꭴꮥ ꮵꭸꮢ|ꮎꮏ \d+ ꭷꮈ ꮵꭸꮢ|ꮎꮏ \d+ ꮡꮯ ꮵꭸꮢ|ꮎꮏ \d+ ꮢꮎ ꮵꭸꮢ|\d+ ꮡꮯꮆꮣ ꮵꭸꮢ|ꮎꮏ \d+ ꭲᏻꮯꮆꮣ|\d+ ꭰꮞꮲ ꮵꭸꮢ|ꮎꮏ \d+ ꮡꮯꮆꮣ|ꮎꮏ \d+ ꮧꭷꮈꭲ|\d+ ꭲꭶ ꮵꭸꮢ|ꮎꮏ \d+ ꭰꮞꮲ|ꮎꮏ \d+ ꭲꮿꮤ|ꮎꮏ \d+ ꭷꮈꭲ|ꮎꮏ \d+ ꭲꭶ|ꮎꮏ \d+ ꭴꮥ|ꮎꮏ \d+ ꭷꮈ|ꮎꮏ \d+ ꮡꮯ|ꮎꮏ \d+ ꮢꮎ)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(ꮎꮏ \d+ ꭲᏻꮎꮩꮣꮖꮝꮧ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮿꮤꮼꮝꮤꮕ ꮵꭸꮢ|ꮎꮏ \d+ ꮢꮎꮩꮣꮖꮝꮧ ꮵꭸꮢ|\d+ ꭲꮷꮥꮨᏼꮜꮧꮢꭲ ꮵꭸꮢ|\d+ ꭿꮈꮝꭹ ꮷꮢꭿꮫ ꮵꭸꮢ|ꮎꮏ \d+ ꮣꮣꮎꮹꮝꭼ ꮵꭸꮢ|\d+ ꭴꮥꮨᏼꮜꮧꮢꭲ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮷꮥꮨᏼꮜꮧꮢꭲ|ꮎꮏ \d+ ꭿꮈꮝꭹ ꮷꮢꭿꮫ|ꮎꮏ \d+ ꭲᏻꮎꮩꮣꮖꮝꮧ|ꮎꮏ \d+ ꭴꮥꮨᏼꮜꮧꮢꭲ|ꮎꮏ \d+ ꮧꭷꮈꭲ ꮵꭸꮢ|\d+ ꮣꮣꮎꮹꮝꭼ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮿꮤ ꮵꭸꮢ|ꮎꮏ \d+ ꭲꮿꮤꮼꮝꮤꮕ|ꮎꮏ \d+ ꭷꮈꭲ ꮵꭸꮢ|ꮎꮏ \d+ ꮢꮎꮩꮣꮖꮝꮧ|\d+ ꭲᏻꮯꮆꮣ ꮵꭸꮢ|ꮎꮏ \d+ ꭴꮥ ꮵꭸꮢ|ꮎꮏ \d+ ꭷꮈ ꮵꭸꮢ|ꮎꮏ \d+ ꮡꮯ ꮵꭸꮢ|ꮎꮏ \d+ ꮢꮎ ꮵꭸꮢ|\d+ ꮡꮯꮆꮣ ꮵꭸꮢ|ꮎꮏ \d+ ꭲᏻꮯꮆꮣ|\d+ ꭰꮞꮲ ꮵꭸꮢ|ꮎꮏ \d+ ꮡꮯꮆꮣ|ꮎꮏ \d+ ꮧꭷꮈꭲ|\d+ ꭲꭶ ꮵꭸꮢ|ꮎꮏ \d+ ꭰꮞꮲ|ꮎꮏ \d+ ꭲꮿꮤ|ꮎꮏ \d+ ꭷꮈꭲ|ꮎꮏ \d+ ꭲꭶ|ꮎꮏ \d+ ꭴꮥ|ꮎꮏ \d+ ꭷꮈ|ꮎꮏ \d+ ꮡꮯ|ꮎꮏ \d+ ꮢꮎ)$`),
	KnownWords:      []string{"ꭿꭰ ꭲꮿꮤꮼꮝꮤꮕ", "ꭿꭰ ꮷꮥꮨᏼꮢꮨ", "ꭴꮥꮨᏼꮜꮧꮢꭲ", "ꭲꮿꮤꮼꮝꮤꮕ", "ꭴꮎꮩꮣꮖꮝꭼ", "ꭴꮎꮩꮣꮘꮥꮎ", "ꭴꮎꮩꮣꮙꮕꭿ", "ꭷꮈꭲ ꮵꭸꮢ", "ꭿꭰ ꭰꮅꮅꮜ", "ꭿꭰ ꮡꮯꮆꮣ", "ꮢꮎꮩꮣꮖꮝꮧ", "ꮤꮅꮑ ꭷꮈꭲ", "ꮵꮫꮅᏹꮅꮢꭲ", "ꭱꮨ ꮵꭸꮢ", "ꭿꭰ ꭷꮈꭲ", "ꮢꭿᏹꭲꮧꮲ", "ꮷꮎꭹꮆꮝꮧ", "ꭰꮒꮝꭼꮨ", "ꭴꮓꮈꮤꮕ", "ꭺꭿ ꭲꭶ", "ꮕꭹꮑꭲꭶ", "ꮠꮖꮄꮕꮂ", "ꮤꮅꮑꭲꭶ", "ꮶꭲꮑꭲꭶ", "ꭱꮨᏼꭲ", "ꭵꮝꭹᏹ", "ꭻᏸꮙꮒ", "ꮕꮣꮥꮖ", "ꮜꮎꮄꭲ", "ꮡꮯꮆꮣ", "ꮥꭽꮇᏹ", "ꮪꮅꮝꮧ", "ꮪꮒꮕꮧ", "gmt", "utc", "ꭰꮕᏹ", "ꭰꮞꮲ", "ꭲꮿꮤ", "ꭶꮆꮒ", "ꭷꭶꮅ", "ꭷꮈꭲ", "ꭷꮼꮒ", "ꮕꭹꮑ", "ꮖꮝꭼ", "ꮘꮥꮎ", "ꮙꮕꭿ", "ꮜꮎꮄ", "ꮤꮅꮑ", "ꮶꭲꮑ", "ꮷꮎꭹ", "am", "pm", "ꭰꮒ", "ꭰꮕ", "ꭲꭶ", "ꭴꮓ", "ꭴꮥ", "ꭵꮝ", "ꭶꮆ", "ꭷꭶ", "ꭷꮈ", "ꭷꮼ", "ꭻᏸ", "ꮓꮚ", "ꮕꮣ", "ꮡꮯ", "ꮢꭿ", "ꮢꮎ", "ꮥꭽ", "ꮪꮅ", "ꮪꮒ", " ", "'", "+", ",", "-", ".", "/", ":", ";", "@", "[", "]", "z", "|"},
})
