// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var en_Locale = LocaleData{
	Name:                  "en",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_001_Locale = LocaleData{
	Name:                  "en-001",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_150_Locale = LocaleData{
	Name:                  "en-150",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_AG_Locale = LocaleData{
	Name:                  "en-AG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_AI_Locale = LocaleData{
	Name:                  "en-AI",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_AS_Locale = LocaleData{
	Name:                  "en-AS",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_AT_Locale = LocaleData{
	Name:                  "en-AT",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_AU_Locale = LocaleData{
	Name:                  "en-AU",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BB_Locale = LocaleData{
	Name:                  "en-BB",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BE_Locale = LocaleData{
	Name:                  "en-BE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BI_Locale = LocaleData{
	Name:                  "en-BI",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BM_Locale = LocaleData{
	Name:                  "en-BM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BS_Locale = LocaleData{
	Name:                  "en-BS",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BW_Locale = LocaleData{
	Name:                  "en-BW",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_BZ_Locale = LocaleData{
	Name:                  "en-BZ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CA_Locale = LocaleData{
	Name:                  "en-CA",
	DateOrder:             "YMD",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
			regexp.MustCompile(`(?i)(\d+) hrs ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) mins ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
			regexp.MustCompile(`(?i)(\d+) mos ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
			regexp.MustCompile(`(?i)(\d+) secs ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
			regexp.MustCompile(`(?i)(\d+) wks ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
			regexp.MustCompile(`(?i)(\d+) yrs ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
			regexp.MustCompile(`(?i)in (\d+) hrs`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) mins`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
			regexp.MustCompile(`(?i)in (\d+) mos`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
			regexp.MustCompile(`(?i)in (\d+) secs`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
			regexp.MustCompile(`(?i)in (\d+) wks`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
			regexp.MustCompile(`(?i)in (\d+) yrs`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CC_Locale = LocaleData{
	Name:                  "en-CC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CH_Locale = LocaleData{
	Name:                  "en-CH",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CK_Locale = LocaleData{
	Name:                  "en-CK",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CM_Locale = LocaleData{
	Name:                  "en-CM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CX_Locale = LocaleData{
	Name:                  "en-CX",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_CY_Locale = LocaleData{
	Name:                  "en-CY",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_DE_Locale = LocaleData{
	Name:                  "en-DE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_DG_Locale = LocaleData{
	Name:                  "en-DG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_DK_Locale = LocaleData{
	Name:                  "en-DK",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_DM_Locale = LocaleData{
	Name:                  "en-DM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_ER_Locale = LocaleData{
	Name:                  "en-ER",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_FI_Locale = LocaleData{
	Name:                  "en-FI",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_FJ_Locale = LocaleData{
	Name:                  "en-FJ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_FK_Locale = LocaleData{
	Name:                  "en-FK",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_FM_Locale = LocaleData{
	Name:                  "en-FM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GB_Locale = LocaleData{
	Name:                  "en-GB",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GD_Locale = LocaleData{
	Name:                  "en-GD",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GG_Locale = LocaleData{
	Name:                  "en-GG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GH_Locale = LocaleData{
	Name:                  "en-GH",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GI_Locale = LocaleData{
	Name:                  "en-GI",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GM_Locale = LocaleData{
	Name:                  "en-GM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GU_Locale = LocaleData{
	Name:                  "en-GU",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_GY_Locale = LocaleData{
	Name:                  "en-GY",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_HK_Locale = LocaleData{
	Name:                  "en-HK",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_IE_Locale = LocaleData{
	Name:                  "en-IE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_IL_Locale = LocaleData{
	Name:                  "en-IL",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_IM_Locale = LocaleData{
	Name:                  "en-IM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_IN_Locale = LocaleData{
	Name:                  "en-IN",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_IO_Locale = LocaleData{
	Name:                  "en-IO",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_JE_Locale = LocaleData{
	Name:                  "en-JE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_JM_Locale = LocaleData{
	Name:                  "en-JM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_KE_Locale = LocaleData{
	Name:                  "en-KE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_KI_Locale = LocaleData{
	Name:                  "en-KI",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_KN_Locale = LocaleData{
	Name:                  "en-KN",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_KY_Locale = LocaleData{
	Name:                  "en-KY",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_LC_Locale = LocaleData{
	Name:                  "en-LC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_LR_Locale = LocaleData{
	Name:                  "en-LR",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_LS_Locale = LocaleData{
	Name:                  "en-LS",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MG_Locale = LocaleData{
	Name:                  "en-MG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MH_Locale = LocaleData{
	Name:                  "en-MH",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MO_Locale = LocaleData{
	Name:                  "en-MO",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MP_Locale = LocaleData{
	Name:                  "en-MP",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MS_Locale = LocaleData{
	Name:                  "en-MS",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MT_Locale = LocaleData{
	Name:                  "en-MT",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MU_Locale = LocaleData{
	Name:                  "en-MU",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MW_Locale = LocaleData{
	Name:                  "en-MW",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_MY_Locale = LocaleData{
	Name:                  "en-MY",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NA_Locale = LocaleData{
	Name:                  "en-NA",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NF_Locale = LocaleData{
	Name:                  "en-NF",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NG_Locale = LocaleData{
	Name:                  "en-NG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NL_Locale = LocaleData{
	Name:                  "en-NL",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NR_Locale = LocaleData{
	Name:                  "en-NR",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NU_Locale = LocaleData{
	Name:                  "en-NU",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_NZ_Locale = LocaleData{
	Name:                  "en-NZ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_PG_Locale = LocaleData{
	Name:                  "en-PG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_PH_Locale = LocaleData{
	Name:                  "en-PH",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_PK_Locale = LocaleData{
	Name:                  "en-PK",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_PN_Locale = LocaleData{
	Name:                  "en-PN",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_PR_Locale = LocaleData{
	Name:                  "en-PR",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_PW_Locale = LocaleData{
	Name:                  "en-PW",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_RW_Locale = LocaleData{
	Name:                  "en-RW",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SB_Locale = LocaleData{
	Name:                  "en-SB",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SC_Locale = LocaleData{
	Name:                  "en-SC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SD_Locale = LocaleData{
	Name:                  "en-SD",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SE_Locale = LocaleData{
	Name:                  "en-SE",
	DateOrder:             "YMD",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SG_Locale = LocaleData{
	Name:                  "en-SG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months", "mth"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this month`, `this mth`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last month`, `last mth`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next month`, `next mth`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
			regexp.MustCompile(`(?i)(\d+) mth ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
			regexp.MustCompile(`(?i)in (\d+) mth`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SH_Locale = LocaleData{
	Name:                  "en-SH",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SI_Locale = LocaleData{
	Name:                  "en-SI",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SL_Locale = LocaleData{
	Name:                  "en-SL",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SS_Locale = LocaleData{
	Name:                  "en-SS",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SX_Locale = LocaleData{
	Name:                  "en-SX",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_SZ_Locale = LocaleData{
	Name:                  "en-SZ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_TC_Locale = LocaleData{
	Name:                  "en-TC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_TK_Locale = LocaleData{
	Name:                  "en-TK",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_TO_Locale = LocaleData{
	Name:                  "en-TO",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_TT_Locale = LocaleData{
	Name:                  "en-TT",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_TV_Locale = LocaleData{
	Name:                  "en-TV",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_TZ_Locale = LocaleData{
	Name:                  "en-TZ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_UG_Locale = LocaleData{
	Name:                  "en-UG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_UM_Locale = LocaleData{
	Name:                  "en-UM",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_VC_Locale = LocaleData{
	Name:                  "en-VC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_VG_Locale = LocaleData{
	Name:                  "en-VG",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_VI_Locale = LocaleData{
	Name:                  "en-VI",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_VU_Locale = LocaleData{
	Name:                  "en-VU",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_WS_Locale = LocaleData{
	Name:                  "en-WS",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_ZA_Locale = LocaleData{
	Name:                  "en-ZA",
	DateOrder:             "YMD",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_ZM_Locale = LocaleData{
	Name:                  "en-ZM",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}

var en_ZW_Locale = LocaleData{
	Name:                  "en-ZW",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "about", "ad", "and", "at", "by", "just", "m", "nd", "of", "on", "rd", "st", "th", "the", "|"},
	PertainWords:          []string{"of"},
	January:               []string{"jan", "january"},
	February:              []string{"feb", "february"},
	March:                 []string{"mar", "march"},
	April:                 []string{"apr", "april"},
	May:                   []string{"may"},
	June:                  []string{"jun", "june"},
	July:                  []string{"jul", "july"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "sept", "september"},
	October:               []string{"oct", "october"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"mon", "monday"},
	Tuesday:               []string{"tue", "tues", "tuesday"},
	Wednesday:             []string{"wed", "wednesday"},
	Thursday:              []string{"thu", "thursday"},
	Friday:                []string{"fri", "friday"},
	Saturday:              []string{"sat", "saturday"},
	Sunday:                []string{"sun", "sunday"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Decade:                []string{"decade", "decades"},
	Year:                  []string{"year", "years", "yr"},
	Month:                 []string{"mo", "month", "months"},
	Week:                  []string{"week", "weeks", "wk"},
	Day:                   []string{"day", "days"},
	Hour:                  []string{"h", "hour", "hours", "hr", "hrs"},
	Minute:                []string{"m", "min", "mins", "minute", "minutes"},
	Second:                []string{"s", "sec", "second", "seconds", "secs"},
	In:                    []string{"from now", "in"},
	Ago:                   []string{"ago"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`today`},
		`0 hour ago`:   {`this hour`},
		`0 minute ago`: {`this minute`},
		`0 month ago`:  {`this mo`, `this month`},
		`0 second ago`: {`now`},
		`0 week ago`:   {`this week`, `this wk`},
		`0 year ago`:   {`this year`, `this yr`},
		`1 day ago`:    {`yesterday`},
		`1 decade ago`: {`last decade`, `this decade`},
		`1 month ago`:  {`last mo`, `last month`},
		`1 week ago`:   {`last week`, `last wk`},
		`1 year ago`:   {`last year`, `last yr`},
		`2 day ago`:    {`day before yesterday`},
		`in 1 day`:     {`tomorrow`},
		`in 1 decade`:  {`next decade`},
		`in 1 month`:   {`next mo`, `next month`},
		`in 1 week`:    {`next week`, `next wk`},
		`in 1 year`:    {`next year`, `next yr`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) day ago`),
			regexp.MustCompile(`(?i)(\d+) days ago`),
		},
		`\1 decade ago`: {
			regexp.MustCompile(`(?i)(\d+) decades? ago`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) hour ago`),
			regexp.MustCompile(`(?i)(\d+) hours ago`),
			regexp.MustCompile(`(?i)(\d+) hr ago`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min ago`),
			regexp.MustCompile(`(?i)(\d+) minute ago`),
			regexp.MustCompile(`(?i)(\d+) minutes ago`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mo ago`),
			regexp.MustCompile(`(?i)(\d+) month ago`),
			regexp.MustCompile(`(?i)(\d+) months ago`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) sec ago`),
			regexp.MustCompile(`(?i)(\d+) second ago`),
			regexp.MustCompile(`(?i)(\d+) seconds ago`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) week ago`),
			regexp.MustCompile(`(?i)(\d+) weeks ago`),
			regexp.MustCompile(`(?i)(\d+) wk ago`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) year ago`),
			regexp.MustCompile(`(?i)(\d+) years ago`),
			regexp.MustCompile(`(?i)(\d+) yr ago`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)in (\d+) day`),
			regexp.MustCompile(`(?i)in (\d+) days`),
		},
		`in \1 decade`: {
			regexp.MustCompile(`(?i)in (\d+) decades?`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)in (\d+) hour`),
			regexp.MustCompile(`(?i)in (\d+) hours`),
			regexp.MustCompile(`(?i)in (\d+) hr`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)in (\d+) min`),
			regexp.MustCompile(`(?i)in (\d+) minute`),
			regexp.MustCompile(`(?i)in (\d+) minutes`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)in (\d+) mo`),
			regexp.MustCompile(`(?i)in (\d+) month`),
			regexp.MustCompile(`(?i)in (\d+) months`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)in (\d+) sec`),
			regexp.MustCompile(`(?i)in (\d+) second`),
			regexp.MustCompile(`(?i)in (\d+) seconds`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)in (\d+) week`),
			regexp.MustCompile(`(?i)in (\d+) weeks`),
			regexp.MustCompile(`(?i)in (\d+) wk`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)in (\d+) year`),
			regexp.MustCompile(`(?i)in (\d+) years`),
			regexp.MustCompile(`(?i)in (\d+) yr`),
		},
	},
	Simplifications: map[string]string{
		`(?:12\s+)?midnight`:     `00:00`,
		`(?:12\s+)?noon`:         `12:00`,
		`(?<=from\s+)now`:        `in`,
		`(\d+)h(\d+)m?`:          `\1:\2`,
		`a`:                      `1`,
		`an`:                     `1`,
		`eight`:                  `8`,
		`eleven`:                 `11`,
		`five`:                   `5`,
		`four`:                   `4`,
		`less than 1 minute ago`: `45 second ago`,
		`nine`:                   `9`,
		`one`:                    `1`,
		`seven`:                  `7`,
		`six`:                    `6`,
		`ten`:                    `10`,
		`three`:                  `3`,
		`twelve`:                 `12`,
		`two`:                    `2`,
	},
}
