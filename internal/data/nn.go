// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var nn_Locale = merge(nil, LocaleData{
	Name:      "nn",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: map[string]string{
		"ettermiddag": "pm",
		"formiddag":   "am",
		"september":   "september",
		"desember":    "december",
		"november":    "november",
		"februar":     "february",
		"oktober":     "october",
		"laurdag":     "saturday",
		"torsdag":     "thursday",
		"august":      "august",
		"fredag":      "friday",
		"januar":      "january",
		"minutt":      "minute",
		"mandag":      "monday",
		"sekund":      "second",
		"søndag":      "sunday",
		"tysdag":      "tuesday",
		"onsdag":      "wednesday",
		"april":       "april",
		"manad":       "month",
		"time":        "hour",
		"juli":        "july",
		"juni":        "june",
		"mars":        "march",
		"veke":        "week",
		"apr":         "april",
		"aug":         "august",
		"dag":         "day",
		"des":         "december",
		"feb":         "february",
		"fre":         "friday",
		"gmt":         "gmt",
		"jan":         "january",
		"jul":         "july",
		"jun":         "june",
		"mar":         "march",
		"mai":         "may",
		"man":         "monday",
		"nov":         "november",
		"okt":         "october",
		"lau":         "saturday",
		"sep":         "september",
		"søn":         "sunday",
		"tor":         "thursday",
		"tys":         "tuesday",
		"utc":         "utc",
		"ons":         "wednesday",
		"am":          "am",
		"fm":          "am",
		"fr":          "friday",
		"ma":          "monday",
		"em":          "pm",
		"pm":          "pm",
		"la":          "saturday",
		"sø":          "sunday",
		"to":          "thursday",
		"ty":          "tuesday",
		"on":          "wednesday",
		"ar":          "year",
		"'":           "",
		",":           "",
		";":           "",
		"@":           "",
		"[":           "",
		"]":           "",
		"|":           "",
		" ":           " ",
		"+":           "+",
		"-":           "-",
		".":           ".",
		"/":           "/",
		":":           ":",
		"z":           "z",
	},
	RelativeType: map[string]string{
		"this minute": "0 minute ago",
		"this month":  "0 month ago",
		"last month":  "1 month ago",
		"next month":  "in 1 month",
		"this hour":   "0 hour ago",
		"this week":   "0 week ago",
		"this year":   "0 year ago",
		"last week":   "1 week ago",
		"last year":   "1 year ago",
		"next week":   "in 1 week",
		"next year":   "in 1 year",
		"i morgon":    "in 1 day",
		"i dag":       "0 day ago",
		"i gar":       "1 day ago",
		"now":         "0 second ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)for (\d+) minutter siden`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)for (\d+) sekunder siden`), "$1 second ago"},
		{regexp.MustCompile(`(?i)for (\d+) maneder siden`), "$1 month ago"},
		{regexp.MustCompile(`(?i)for (\d+) minutt siden`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)for (\d+) sekund siden`), "$1 second ago"},
		{regexp.MustCompile(`(?i)for (\d+) timer siden`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)for (\d+) maned siden`), "$1 month ago"},
		{regexp.MustCompile(`(?i)for (\d+) døgn siden`), "$1 day ago"},
		{regexp.MustCompile(`(?i)for (\d+) time siden`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)for (\d+) uker siden`), "$1 week ago"},
		{regexp.MustCompile(`(?i)for (\d+) uke siden`), "$1 week ago"},
		{regexp.MustCompile(`(?i)for (\d+) ar siden`), "$1 year ago"},
		{regexp.MustCompile(`(?i)om (\d+) minutter`), "in $1 minute"},
		{regexp.MustCompile(`(?i)om (\d+) sekunder`), "in $1 second"},
		{regexp.MustCompile(`(?i)om (\d+) maneder`), "in $1 month"},
		{regexp.MustCompile(`(?i)om (\d+) minutt`), "in $1 minute"},
		{regexp.MustCompile(`(?i)om (\d+) sekund`), "in $1 second"},
		{regexp.MustCompile(`(?i)om (\d+) timer`), "in $1 hour"},
		{regexp.MustCompile(`(?i)om (\d+) maned`), "in $1 month"},
		{regexp.MustCompile(`(?i)om (\d+) døgn`), "in $1 day"},
		{regexp.MustCompile(`(?i)om (\d+) time`), "in $1 hour"},
		{regexp.MustCompile(`(?i)om (\d+) uker`), "in $1 week"},
		{regexp.MustCompile(`(?i)om (\d+) uke`), "in $1 week"},
		{regexp.MustCompile(`(?i)om (\d+) ar`), "in $1 year"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(for \d+ minutter siden|for \d+ sekunder siden|for \d+ maneder siden|for \d+ minutt siden|for \d+ sekund siden|for \d+ maned siden|for \d+ timer siden|for \d+ døgn siden|for \d+ time siden|for \d+ uker siden|for \d+ uke siden|for \d+ ar siden|om \d+ minutter|om \d+ sekunder|om \d+ maneder|om \d+ minutt|om \d+ sekund|om \d+ maned|om \d+ timer|om \d+ døgn|om \d+ time|om \d+ uker|om \d+ uke|om \d+ ar)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(for \d+ minutter siden|for \d+ sekunder siden|for \d+ maneder siden|for \d+ minutt siden|for \d+ sekund siden|for \d+ maned siden|for \d+ timer siden|for \d+ døgn siden|for \d+ time siden|for \d+ uker siden|for \d+ uke siden|for \d+ ar siden|om \d+ minutter|om \d+ sekunder|om \d+ maneder|om \d+ minutt|om \d+ sekund|om \d+ maned|om \d+ timer|om \d+ døgn|om \d+ time|om \d+ uker|om \d+ uke|om \d+ ar)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(ettermiddag|this minute|last month|next month|this month|formiddag|last week|last year|next week|next year|september|this hour|this week|this year|desember|i morgon|november|februar|laurdag|oktober|torsdag|august|fredag|januar|mandag|minutt|onsdag|sekund|søndag|tysdag|april|i dag|i gar|manad|juli|juni|mars|time|veke|apr|aug|dag|des|feb|fre|gmt|jan|jul|jun|lau|mai|man|mar|nov|now|okt|ons|sep|søn|tor|tys|utc|\+|\.|\[|\]|\||am|ar|em|fm|fr|la|ma|on|pm|sø|to|ty| |'|,|-|/|:|;|@|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})
