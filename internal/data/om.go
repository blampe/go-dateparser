// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var om_Locale = LocaleData{
	Name:      "om",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: []ReplacementData{
		{regexp.MustCompile(`(\A|\W|_)onkololeessa(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)bitooteessa(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)guraandhala(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`), "${1}0 minute ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)adooleessa(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`), "${1}1 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`), "${1}in 1 month${2}"},
		{regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`), "${1}0 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)waxabajjii(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`), "${1}1 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`), "${1}1 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`), "${1}in 1 week${2}"},
		{regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`), "${1}in 1 year${2}"},
		{regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`), "${1}0 hour ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`), "${1}0 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`), "${1}0 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)yesterday(\z|\W|_)`), "${1}1 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)fuulbana(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)tomorrow(\z|\W|_)`), "${1}in 1 day${2}"},
		{regexp.MustCompile(`(\A|\W|_)amajjii(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)dilbata(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)hagayya(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)jimaata(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)kamiisa(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)qibxata(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)sadaasa(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)sanbata(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)wiixata(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)caamsa(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)muddee(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)roobii(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)second(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)month(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)today(\z|\W|_)`), "${1}0 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)elba(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)hour(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)week(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)year(\z|\W|_)`), "${1}year${2}"},
		{regexp.MustCompile(`(\A|\W|_)ado(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)ama(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)bit(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)cam(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)day(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)dil(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)elb(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)ful(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)gur(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)hag(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)jim(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)kam(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mud(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`), "${1}0 second ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)onk(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)qib(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)rob(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)sad(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)san(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)wax(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)wix(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)wb(\z|\W|_)`), "${1}pm${2}"},
		{regexp.MustCompile(`(\A|\W|_)wd(\z|\W|_)`), "${1}am${2}"},
	},
}

var om_KE_Locale = LocaleData{
	Name:      "om-KE",
	Parent:    &om_Locale,
	DateOrder: "DMY",
}
