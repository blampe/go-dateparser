// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var wae_Locale = merge(nil, LocaleData{
	Name:      "wae",
	DateOrder: "YMD",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: map[string]string{
		"this minute": "0 minute ago",
		"christmanet": "december",
		"wintermanet": "november",
		"herbstmanet": "september",
		"this month":  "0 month ago",
		"last month":  "1 month ago",
		"next month":  "in 1 month",
		"this hour":   "0 hour ago",
		"this week":   "0 week ago",
		"this year":   "0 year ago",
		"last week":   "1 week ago",
		"last year":   "1 year ago",
		"next week":   "in 1 week",
		"next year":   "in 1 year",
		"abrille":     "april",
		"schtund":     "hour",
		"minutta":     "minute",
		"wimanet":     "october",
		"samstag":     "saturday",
		"sekunda":     "second",
		"sunntag":     "sunday",
		"frontag":     "thursday",
		"mittwuc":     "wednesday",
		"gester":      "1 day ago",
		"oigste":      "august",
		"hornig":      "february",
		"fritag":      "friday",
		"jenner":      "january",
		"heiwet":      "july",
		"bracet":      "june",
		"mantag":      "monday",
		"zistag":      "tuesday",
		"hitte":       "0 day ago",
		"marze":       "march",
		"meije":       "may",
		"manet":       "month",
		"more":        "in 1 day",
		"wuca":        "week",
		"now":         "0 second ago",
		"abr":         "april",
		"oig":         "august",
		"tag":         "day",
		"chr":         "december",
		"hor":         "february",
		"fri":         "friday",
		"gmt":         "gmt",
		"jen":         "january",
		"hei":         "july",
		"bra":         "june",
		"mar":         "march",
		"mei":         "may",
		"man":         "monday",
		"win":         "november",
		"wim":         "october",
		"sam":         "saturday",
		"her":         "september",
		"sun":         "sunday",
		"fro":         "thursday",
		"zis":         "tuesday",
		"utc":         "utc",
		"mit":         "wednesday",
		"jar":         "year",
		"am":          "am",
		"pm":          "pm",
		"'":           "",
		",":           "",
		";":           "",
		"@":           "",
		"[":           "",
		"]":           "",
		"|":           "",
		" ":           " ",
		"+":           "+",
		"-":           "-",
		".":           ".",
		"/":           "/",
		":":           ":",
		"z":           "z",
	},
	TranslationRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)vor (\d+) sekunde`), "$1 second ago"},
		{regexp.MustCompile(`(?i)vor (\d+) stunde`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)vor (\d+) minuta`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)vor (\d+) minute`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)vor (\d+) sekund`), "$1 second ago"},
		{regexp.MustCompile(`(?i)vor (\d+) stund`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)vor (\d+) manet`), "$1 month ago"},
		{regexp.MustCompile(`(?i)i (\d+) sekunde`), "in $1 second"},
		{regexp.MustCompile(`(?i)cor (\d+) wuca`), "$1 week ago"},
		{regexp.MustCompile(`(?i)vor (\d+) wuca`), "$1 week ago"},
		{regexp.MustCompile(`(?i)i (\d+) stunde`), "in $1 hour"},
		{regexp.MustCompile(`(?i)i (\d+) minuta`), "in $1 minute"},
		{regexp.MustCompile(`(?i)i (\d+) minute`), "in $1 minute"},
		{regexp.MustCompile(`(?i)i (\d+) sekund`), "in $1 second"},
		{regexp.MustCompile(`(?i)vor (\d+) tag`), "$1 day ago"},
		{regexp.MustCompile(`(?i)cor (\d+) jar`), "$1 year ago"},
		{regexp.MustCompile(`(?i)vor (\d+) jar`), "$1 year ago"},
		{regexp.MustCompile(`(?i)i (\d+) stund`), "in $1 hour"},
		{regexp.MustCompile(`(?i)i (\d+) manet`), "in $1 month"},
		{regexp.MustCompile(`(?i)i (\d+) wuca`), "in $1 week"},
		{regexp.MustCompile(`(?i)i (\d+) tag`), "in $1 day"},
		{regexp.MustCompile(`(?i)i (\d+) jar`), "in $1 year"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|\W|_)(vor \d+ sekunde|vor \d+ minuta|vor \d+ minute|vor \d+ sekund|vor \d+ stunde|i \d+ sekunde|vor \d+ manet|vor \d+ stund|cor \d+ wuca|i \d+ minuta|i \d+ minute|i \d+ sekund|i \d+ stunde|vor \d+ wuca|cor \d+ jar|i \d+ manet|i \d+ stund|vor \d+ jar|vor \d+ tag|i \d+ wuca|i \d+ jar|i \d+ tag)(\z|\W|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(vor \d+ sekunde|vor \d+ minuta|vor \d+ minute|vor \d+ sekund|vor \d+ stunde|i \d+ sekunde|vor \d+ manet|vor \d+ stund|cor \d+ wuca|i \d+ minuta|i \d+ minute|i \d+ sekund|i \d+ stunde|vor \d+ wuca|cor \d+ jar|i \d+ manet|i \d+ stund|vor \d+ jar|vor \d+ tag|i \d+ wuca|i \d+ jar|i \d+ tag)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|\W|_|\d))(christmanet|herbstmanet|this minute|wintermanet|last month|next month|this month|last week|last year|next week|next year|this hour|this week|this year|abrille|frontag|minutta|mittwuc|samstag|schtund|sekunda|sunntag|wimanet|bracet|fritag|gester|heiwet|hornig|jenner|mantag|oigste|zistag|hitte|manet|marze|meije|more|wuca|abr|bra|chr|fri|fro|gmt|hei|her|hor|jar|jen|man|mar|mei|mit|now|oig|sam|sun|tag|utc|wim|win|zis|\+|\.|\[|\]|\||am|pm| |'|,|-|/|:|;|@|z)((?:\z|\W|_|\d).*)$`),
})
