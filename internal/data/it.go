// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var it_Locale = LocaleData{
	Name:      "it",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "circa", "e", "|"},
	Simplifications: []ReplacementData{
		{regexp.MustCompile(`(\A|\W|_)(\d+)\s+ora(\z|\W|_)`), "${1}${2} ore${3}"},
	},
	Translations: []ReplacementData{
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) settimana(\z|\W|_)`), "${1}in ${2} week${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) settimane(\z|\W|_)`), "${1}in ${2} week${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) settimana fa(\z|\W|_)`), "${1}${2} week ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) settimane fa(\z|\W|_)`), "${1}${2} week ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)settimana prossima(\z|\W|_)`), "${1}in 1 week${2}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) secondi(\z|\W|_)`), "${1}in ${2} second${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) secondo(\z|\W|_)`), "${1}in ${2} second${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) secondi fa(\z|\W|_)`), "${1}${2} second ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) secondo fa(\z|\W|_)`), "${1}${2} second ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)questa settimana(\z|\W|_)`), "${1}0 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)settimana scorsa(\z|\W|_)`), "${1}1 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) giorni(\z|\W|_)`), "${1}in ${2} day${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) giorno(\z|\W|_)`), "${1}in ${2} day${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) minuti(\z|\W|_)`), "${1}in ${2} minute${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) minuto(\z|\W|_)`), "${1}in ${2} minute${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) giorni fa(\z|\W|_)`), "${1}${2} day ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) giorno fa(\z|\W|_)`), "${1}${2} day ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) anni(\z|\W|_)`), "${1}in ${2} year${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) anno(\z|\W|_)`), "${1}in ${2} year${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) mese(\z|\W|_)`), "${1}in ${2} month${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) mesi(\z|\W|_)`), "${1}in ${2} month${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) sett(\z|\W|_)`), "${1}in ${2} week${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) anni fa(\z|\W|_)`), "${1}${2} year ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) anno fa(\z|\W|_)`), "${1}${2} year ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) mese fa(\z|\W|_)`), "${1}${2} month ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) mesi fa(\z|\W|_)`), "${1}${2} month ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) sett fa(\z|\W|_)`), "${1}${2} week ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)anno prossimo(\z|\W|_)`), "${1}in 1 year${2}"},
		{regexp.MustCompile(`(\A|\W|_)mese prossimo(\z|\W|_)`), "${1}in 1 month${2}"},
		{regexp.MustCompile(`(\A|\W|_)questo minuto(\z|\W|_)`), "${1}0 minute ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) min(\z|\W|_)`), "${1}in ${2} minute${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) ora(\z|\W|_)`), "${1}in ${2} hour${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) ore(\z|\W|_)`), "${1}in ${2} hour${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) sec(\z|\W|_)`), "${1}in ${2} second${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) ora fa(\z|\W|_)`), "${1}${2} hour ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) ore fa(\z|\W|_)`), "${1}${2} hour ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) sec fa(\z|\W|_)`), "${1}${2} second ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) gg(\z|\W|_)`), "${1}in ${2} day${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) gg fa(\z|\W|_)`), "${1}${2} day ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)anno scorso(\z|\W|_)`), "${1}1 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)mese scorso(\z|\W|_)`), "${1}1 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)questo mese(\z|\W|_)`), "${1}0 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) g(\z|\W|_)`), "${1}in ${2} day${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) h(\z|\W|_)`), "${1}in ${2} hour${3}"},
		{regexp.MustCompile(`(\A|\W|_)tra (\d+) s(\z|\W|_)`), "${1}in ${2} second${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) g fa(\z|\W|_)`), "${1}${2} day ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) h fa(\z|\W|_)`), "${1}${2} hour ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)(\d+) s fa(\z|\W|_)`), "${1}${2} second ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)altro ieri(\z|\W|_)`), "${1}2 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)quest'anno(\z|\W|_)`), "${1}0 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)mercoledì(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)quest'ora(\z|\W|_)`), "${1}0 hour ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)settembre(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)settimana(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)settimane(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)dicembre(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)domenica(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)febbraio(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)novembre(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)gennaio(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)giovedì(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)martedì(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ottobre(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)secondi(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)secondo(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)venerdì(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)agosto(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)aprile(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)domani(\z|\W|_)`), "${1}in 1 day${2}"},
		{regexp.MustCompile(`(\A|\W|_)giorni(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)giorno(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)giugno(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)luglio(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)lunedì(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)maggio(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)minuti(\z|\W|_)`), "${1}minute${2}"},
		{regexp.MustCompile(`(\A|\W|_)sabato(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)marzo(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)anni(\z|\W|_)`), "${1}year${2}"},
		{regexp.MustCompile(`(\A|\W|_)anno(\z|\W|_)`), "${1}year${2}"},
		{regexp.MustCompile(`(\A|\W|_)ieri(\z|\W|_)`), "${1}1 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)mese(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)mesi(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)oggi(\z|\W|_)`), "${1}0 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)sett(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)ago(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)apr(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)dic(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)dom(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)feb(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)gen(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)gio(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)giu(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)lug(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)lun(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mag(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)mar(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)mer(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)nov(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)ora(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)ore(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)ott(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)sab(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)sec(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)set(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)ven(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)am(\z|\W|_)`), "${1}am${2}"},
		{regexp.MustCompile(`(\A|\W|_)fa(\z|\W|_)`), "${1}ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)in(\z|\W|_)`), "${1}in${2}"},
		{regexp.MustCompile(`(\A|\W|_)pm(\z|\W|_)`), "${1}pm${2}"},
		{regexp.MustCompile(`(\A|\W|_)g(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)h(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)s(\z|\W|_)`), "${1}second${2}"},
	},
}

var it_CH_Locale = LocaleData{
	Name:      "it-CH",
	Parent:    &it_Locale,
	DateOrder: "DMY",
}

var it_SM_Locale = LocaleData{
	Name:      "it-SM",
	Parent:    &it_Locale,
	DateOrder: "DMY",
}

var it_VA_Locale = LocaleData{
	Name:      "it-VA",
	Parent:    &it_Locale,
	DateOrder: "DMY",
}
