// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var es_Locale = LocaleData{
	Name:                  "es",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_419_Locale = LocaleData{
	Name:                  "es-419",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_AR_Locale = LocaleData{
	Name:                  "es-AR",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"seg", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) seg`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) seg`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_BO_Locale = LocaleData{
	Name:                  "es-BO",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_BR_Locale = LocaleData{
	Name:                  "es-BR",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_BZ_Locale = LocaleData{
	Name:                  "es-BZ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_CL_Locale = LocaleData{
	Name:                  "es-CL",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_CO_Locale = LocaleData{
	Name:                  "es-CO",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_CR_Locale = LocaleData{
	Name:                  "es-CR",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_CU_Locale = LocaleData{
	Name:                  "es-CU",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_DO_Locale = LocaleData{
	Name:                  "es-DO",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_EA_Locale = LocaleData{
	Name:                  "es-EA",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_EC_Locale = LocaleData{
	Name:                  "es-EC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_GQ_Locale = LocaleData{
	Name:                  "es-GQ",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_GT_Locale = LocaleData{
	Name:                  "es-GT",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_HN_Locale = LocaleData{
	Name:                  "es-HN",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_IC_Locale = LocaleData{
	Name:                  "es-IC",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_MX_Locale = LocaleData{
	Name:                  "es-MX",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el mes próximo`, `el próximo mes`},
		`in 1 week`:    {`la semana próxima`},
		`in 1 year`:    {`el año próximo`, `el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
			regexp.MustCompile(`(?i)en (\d+) día`),
			regexp.MustCompile(`(?i)en (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
			regexp.MustCompile(`(?i)en (\d+) h`),
			regexp.MustCompile(`(?i)en (\d+) n`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
			regexp.MustCompile(`(?i)en (\d+) min`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)en (\d+) m`),
			regexp.MustCompile(`(?i)en (\d+) mes`),
			regexp.MustCompile(`(?i)en (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
			regexp.MustCompile(`(?i)en (\d+) s`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
			regexp.MustCompile(`(?i)en (\d+) sem`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
			regexp.MustCompile(`(?i)en (\d+) a`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_NI_Locale = LocaleData{
	Name:                  "es-NI",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_PA_Locale = LocaleData{
	Name:                  "es-PA",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_PE_Locale = LocaleData{
	Name:                  "es-PE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_PH_Locale = LocaleData{
	Name:                  "es-PH",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_PR_Locale = LocaleData{
	Name:                  "es-PR",
	DateOrder:             "MDY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_PY_Locale = LocaleData{
	Name:                  "es-PY",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "seg", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) seg`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) seg`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_SV_Locale = LocaleData{
	Name:                  "es-SV",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_US_Locale = LocaleData{
	Name:                  "es-US",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_UY_Locale = LocaleData{
	Name:                  "es-UY",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}

var es_VE_Locale = LocaleData{
	Name:                  "es-VE",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 2,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "a las", "cerca", "de", "del", "en", "y", "|"},
	PertainWords:          []string{"de", "del"},
	January:               []string{"ene", "enero"},
	February:              []string{"feb", "febrero"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"may", "mayo"},
	June:                  []string{"jun", "junio"},
	July:                  []string{"jul", "julio"},
	August:                []string{"ago", "agosto"},
	September:             []string{"sep", "sept", "septiembre", "set", "setiembre"},
	October:               []string{"oct", "octubre"},
	November:              []string{"nov", "noviembre"},
	December:              []string{"dic", "diciembre"},
	Monday:                []string{"lu", "lun", "lunes"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mi", "mié", "miércoles"},
	Thursday:              []string{"ju", "jue", "jueves"},
	Friday:                []string{"vi", "vie", "viernes"},
	Saturday:              []string{"sa", "sáb", "sábado"},
	Sunday:                []string{"do", "dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "año", "años"},
	Month:                 []string{"m", "mes", "meses"},
	Week:                  []string{"sem", "semana", "semanas"},
	Day:                   []string{"d", "día", "días"},
	Hour:                  []string{"h", "hora", "horas"},
	Minute:                []string{"min", "minuto", "minutos"},
	Second:                []string{"s", "segundo", "segundos"},
	In:                    []string{"en"},
	Ago:                   []string{"hace"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoy`},
		`0 hour ago`:   {`esta hora`},
		`0 minute ago`: {`este minuto`},
		`0 month ago`:  {`este mes`},
		`0 second ago`: {`ahora`},
		`0 week ago`:   {`esta semana`},
		`0 year ago`:   {`este año`},
		`1 day ago`:    {`ayer`},
		`1 month ago`:  {`el mes pasado`},
		`1 week ago`:   {`la semana pasada`},
		`1 year ago`:   {`el año pasado`},
		`2 day ago`:    {`anteayer`},
		`in 1 day`:     {`mañana`},
		`in 1 month`:   {`el próximo mes`},
		`in 1 week`:    {`la próxima semana`},
		`in 1 year`:    {`el próximo año`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hace (\d+) día`),
			regexp.MustCompile(`(?i)hace (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hace (\d+) h`),
			regexp.MustCompile(`(?i)hace (\d+) hora`),
			regexp.MustCompile(`(?i)hace (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hace (\d+) min`),
			regexp.MustCompile(`(?i)hace (\d+) minuto`),
			regexp.MustCompile(`(?i)hace (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hace (\d+) m`),
			regexp.MustCompile(`(?i)hace (\d+) mes`),
			regexp.MustCompile(`(?i)hace (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hace (\d+) s`),
			regexp.MustCompile(`(?i)hace (\d+) segundo`),
			regexp.MustCompile(`(?i)hace (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hace (\d+) sem`),
			regexp.MustCompile(`(?i)hace (\d+) semana`),
			regexp.MustCompile(`(?i)hace (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hace (\d+) a`),
			regexp.MustCompile(`(?i)hace (\d+) año`),
			regexp.MustCompile(`(?i)hace (\d+) años`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)dentro de (\d+) día`),
			regexp.MustCompile(`(?i)dentro de (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)dentro de (\d+) h`),
			regexp.MustCompile(`(?i)dentro de (\d+) hora`),
			regexp.MustCompile(`(?i)dentro de (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)dentro de (\d+) min`),
			regexp.MustCompile(`(?i)dentro de (\d+) minuto`),
			regexp.MustCompile(`(?i)dentro de (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)dentro de (\d+) m`),
			regexp.MustCompile(`(?i)dentro de (\d+) mes`),
			regexp.MustCompile(`(?i)dentro de (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)dentro de (\d+) s`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundo`),
			regexp.MustCompile(`(?i)dentro de (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)dentro de (\d+) sem`),
			regexp.MustCompile(`(?i)dentro de (\d+) semana`),
			regexp.MustCompile(`(?i)dentro de (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)dentro de (\d+) a`),
			regexp.MustCompile(`(?i)dentro de (\d+) año`),
			regexp.MustCompile(`(?i)dentro de (\d+) años`),
		},
	},
	Simplifications: map[string]string{
		`un`:  `1`,
		`una`: `1`,
	},
}
