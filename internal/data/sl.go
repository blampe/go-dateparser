// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var slLocale = LocaleData{
	Name:                  "sl",
	DateOrder:             "DMY",
	January:               []string{"jan", "januar"},
	February:              []string{"feb", "februar"},
	March:                 []string{"mar", "marec"},
	April:                 []string{"apr", "april"},
	May:                   []string{"maj"},
	June:                  []string{"jun", "junij"},
	July:                  []string{"jul", "julij"},
	August:                []string{"avg", "avgust"},
	September:             []string{"sep", "september"},
	October:               []string{"okt", "oktober"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"pon", "ponedeljek"},
	Tuesday:               []string{"tor", "torek"},
	Wednesday:             []string{"sre", "sreda"},
	Thursday:              []string{"čet", "četrtek"},
	Friday:                []string{"pet", "petek"},
	Saturday:              []string{"sob", "sobota"},
	Sunday:                []string{"ned", "nedelja"},
	AM:                    []string{"dop", "dopoldne"},
	PM:                    []string{"pop", "popoldne"},
	Year:                  []string{"leto"},
	Month:                 []string{"mes", "mesec"},
	Week:                  []string{"ted", "teden"},
	Day:                   []string{"dan"},
	Hour:                  []string{"h", "ura"},
	Minute:                []string{"min", "minuta"},
	Second:                []string{"s", "sek", "sekunda"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`danes`},
		`0 hour ago`:   {`v tej uri`},
		`0 minute ago`: {`to minuto`},
		`0 month ago`:  {`ta mesec`},
		`0 second ago`: {`zdaj`},
		`0 week ago`:   {`ta teden`},
		`0 year ago`:   {`letos`},
		`1 day ago`:    {`včeraj`},
		`1 month ago`:  {`prejšnji mesec`},
		`1 week ago`:   {`prejšnji teden`},
		`1 year ago`:   {`lani`},
		`in 1 day`:     {`jutri`},
		`in 1 month`:   {`naslednji mesec`},
		`in 1 week`:    {`naslednji teden`},
		`in 1 year`:    {`naslednje leto`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)pred (\d+) dnevi`),
			regexp.MustCompile(`(?i)pred (\d+) dnevom`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)pred (\d+) h`),
			regexp.MustCompile(`(?i)pred (\d+) urami`),
			regexp.MustCompile(`(?i)pred (\d+) uro`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)pred (\d+) min`),
			regexp.MustCompile(`(?i)pred (\d+) minutami`),
			regexp.MustCompile(`(?i)pred (\d+) minuto`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)pred (\d+) mes`),
			regexp.MustCompile(`(?i)pred (\d+) mesecem`),
			regexp.MustCompile(`(?i)pred (\d+) meseci`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)pred (\d+) s`),
			regexp.MustCompile(`(?i)pred (\d+) sekundami`),
			regexp.MustCompile(`(?i)pred (\d+) sekundo`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)pred (\d+) ted`),
			regexp.MustCompile(`(?i)pred (\d+) tedni`),
			regexp.MustCompile(`(?i)pred (\d+) tednom`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)pred (\d+) leti`),
			regexp.MustCompile(`(?i)pred (\d+) letom`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)čez (\d+) dan`),
			regexp.MustCompile(`(?i)čez (\d+) dni`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)čez (\d+) h`),
			regexp.MustCompile(`(?i)čez (\d+) ur`),
			regexp.MustCompile(`(?i)čez (\d+) uro`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)čez (\d+) min`),
			regexp.MustCompile(`(?i)čez (\d+) minut`),
			regexp.MustCompile(`(?i)čez (\d+) minuto`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)čez (\d+) mes`),
			regexp.MustCompile(`(?i)čez (\d+) mesec`),
			regexp.MustCompile(`(?i)čez (\d+) mesecev`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)čez (\d+) s`),
			regexp.MustCompile(`(?i)čez (\d+) sekund`),
			regexp.MustCompile(`(?i)čez (\d+) sekundo`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)čez (\d+) ted`),
			regexp.MustCompile(`(?i)čez (\d+) teden`),
			regexp.MustCompile(`(?i)čez (\d+) tednov`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)čez (\d+) let`),
			regexp.MustCompile(`(?i)čez (\d+) leto`),
		},
	},
}
