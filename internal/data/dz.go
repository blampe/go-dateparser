// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var dz_Locale = LocaleData{
	Name:      "dz",
	DateOrder: "YMD",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: []TranslationData{
		{regexp.MustCompile(`(\A|\W|_)བངུན་ཕྲག་ (\d+) ཧེ་མ་(\z|\W|_)`), "${1}$2 week ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)ལོ་འཁོར་ (\d+) ཧེ་མ་(\z|\W|_)`), "${1}$2 year ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)ཆུ་ཚོད་ (\d+) ཧེ་མ་(\z|\W|_)`), "${1}$2 hour ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)བངུན་ཕྲག་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 week${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་བཅུ་གཅིག་པ་(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་བཅུ་གཉིས་པ་(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)ལོ་འཁོར་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 year${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྐར་ཆ་ (\d+) ཧེ་མ་(\z|\W|_)`), "${1}$2 second ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)ཆུ་ཚོད་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 hour${3}"},
		{regexp.MustCompile(`(\A|\W|_)ཉིནམ་ (\d+) ཧེ་མ་(\z|\W|_)`), "${1}$2 day ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླཝ་ (\d+) ཧེ་མ་(\z|\W|_)`), "${1}$2 month ago${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྐར་ཆ་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 second${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྐར་མ་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 minute${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་བརྒྱད་པ་(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཉིནམ་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 day${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་གཉིས་པ་(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་གསུམ་པ་(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་བདུན་པ་(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་བཅུ་གཅིག་པ་(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་བཅུ་གཉིས་པ་(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླཝ་ (\d+) ནང་(\z|\W|_)`), "${1}in $2 month${3}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་དགུ་པ་(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་དྲུག་པ(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་བཅུ་པ་(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་བཞི་པ(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་ལྔ་པ་(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་མིག་དམར་(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤྱི་ཟླ་དངཔ་(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`), "${1}0 minute ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་ཕུར་བུ་(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་སྤེན་པ་(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་བརྒྱད་པ་(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`), "${1}1 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`), "${1}in 1 month${2}"},
		{regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`), "${1}0 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་པ་སངས་(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་ལྷག་པ་(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་གཉིས་པ་(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་གསུམ་པ་(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་བདུན་པ་(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`), "${1}1 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`), "${1}1 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`), "${1}in 1 week${2}"},
		{regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`), "${1}in 1 year${2}"},
		{regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`), "${1}0 hour ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`), "${1}0 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`), "${1}0 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་ཉི་མ་(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)གཟའ་ཟླ་བ་(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་དགུ་པ་(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་དྲུག་པ(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་བཅུ་པ་(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་བཞི་པ་(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)བདུན་ཕྲག(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་ལྔ་པ་(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་དངཔ་(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྐར་ཆཱ་(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཆུ་ཚོད(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)ད་རིས་(\z|\W|_)`), "${1}0 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)ནངས་པ་(\z|\W|_)`), "${1}in 1 day${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཕྱི་ཆ་(\z|\W|_)`), "${1}pm${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༡༠(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༡༡(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༡༢(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་ཝ་(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྔ་ཆ་(\z|\W|_)`), "${1}am${2}"},
		{regexp.MustCompile(`(\A|\W|_)སྤེན་(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཁ་ཙ་(\z|\W|_)`), "${1}1 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཕུར་(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)མིར་(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཚེས་(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༡(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༢(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༣(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༤(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༥(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༦(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༧(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༨(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་༩(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)ལྷག་(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)སངས་(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`), "${1}0 second ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཉི་(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ཟླ་(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ལོ(\z|\W|_)`), "${1}year${2}"},
	},
}
