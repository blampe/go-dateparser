// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var lb_Locale = merge(nil, LocaleData{
	Name:      "lb",
	DateOrder: "DMY",
	Charset:   []rune(`bcdefghijklnorstuvwzäéë`),
	Translations: map[string]string{
		"donneschdeg": "thursday",
		"denschdeg":   "tuesday",
		"samschdeg":   "saturday",
		"september":   "september",
		"dezember":    "december",
		"mettwoch":    "wednesday",
		"nomettes":    "pm",
		"november":    "november",
		"februar":     "february",
		"freideg":     "friday",
		"meindeg":     "monday",
		"oktober":     "october",
		"sonndeg":     "sunday",
		"abrell":      "april",
		"august":      "august",
		"januar":      "january",
		"minutt":      "minute",
		"sekonn":      "second",
		"maerz":       "march",
		"moies":       "am",
		"mount":       "month",
		"stonn":       "hour",
		"joer":        "year",
		"juli":        "july",
		"juni":        "june",
		"woch":        "week",
		"abr":         "april",
		"aug":         "august",
		"dag":         "day",
		"den":         "tuesday",
		"dez":         "december",
		"don":         "thursday",
		"feb":         "february",
		"fre":         "friday",
		"gmt":         "gmt",
		"jan":         "january",
		"jul":         "july",
		"jun":         "june",
		"mae":         "march",
		"mee":         "may",
		"mei":         "monday",
		"met":         "wednesday",
		"min":         "minute",
		"nov":         "november",
		"okt":         "october",
		"sam":         "saturday",
		"sek":         "second",
		"sep":         "september",
		"son":         "sunday",
		"utc":         "utc",
		"am":          "am",
		"pm":          "pm",
		"st":          "hour",
		" ":           " ",
		"'":           "",
		"+":           "+",
		",":           "",
		"-":           "-",
		".":           ".",
		"/":           "/",
		":":           ":",
		";":           "",
		"@":           "",
		"[":           "",
		"]":           "",
		"d":           "day",
		"j":           "year",
		"m":           "month",
		"w":           "week",
		"z":           "z",
		"|":           "",
	},
	RelativeType: map[string]string{
		"leschte mount": "1 month ago",
		"nachste mount": "in 1 month",
		"lescht joer":   "1 year ago",
		"lescht woch":   "1 week ago",
		"nachst joer":   "in 1 year",
		"nachst woch":   "in 1 week",
		"this minute":   "0 minute ago",
		"dese mount":    "0 month ago",
		"dest joer":     "0 year ago",
		"this hour":     "0 hour ago",
		"des woch":      "0 week ago",
		"geschter":      "1 day ago",
		"haut":          "0 day ago",
		"muer":          "in 1 day",
		"now":           "0 second ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)virun (\d+) minutt`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)virun (\d+) sekonn`), "$1 second ago"},
		{regexp.MustCompile(`(?i)virun (\d+) mount`), "$1 month ago"},
		{regexp.MustCompile(`(?i)virun (\d+) stonn`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)virun (\d+) joer`), "$1 year ago"},
		{regexp.MustCompile(`(?i)virun (\d+) woch`), "$1 week ago"},
		{regexp.MustCompile(`(?i)an (\d+) minutt`), "in $1 minute"},
		{regexp.MustCompile(`(?i)an (\d+) sekonn`), "in $1 second"},
		{regexp.MustCompile(`(?i)virun (\d+) dag`), "$1 day ago"},
		{regexp.MustCompile(`(?i)virun (\d+) min`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)virun (\d+) sek`), "$1 second ago"},
		{regexp.MustCompile(`(?i)an (\d+) mount`), "in $1 month"},
		{regexp.MustCompile(`(?i)an (\d+) stonn`), "in $1 hour"},
		{regexp.MustCompile(`(?i)virun (\d+) st`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)an (\d+) joer`), "in $1 year"},
		{regexp.MustCompile(`(?i)an (\d+) woch`), "in $1 week"},
		{regexp.MustCompile(`(?i)virun (\d+) d`), "$1 day ago"},
		{regexp.MustCompile(`(?i)virun (\d+) j`), "$1 year ago"},
		{regexp.MustCompile(`(?i)virun (\d+) m`), "$1 month ago"},
		{regexp.MustCompile(`(?i)virun (\d+) w`), "$1 week ago"},
		{regexp.MustCompile(`(?i)an (\d+) dag`), "in $1 day"},
		{regexp.MustCompile(`(?i)an (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)an (\d+) sek`), "in $1 second"},
		{regexp.MustCompile(`(?i)an (\d+) st`), "in $1 hour"},
		{regexp.MustCompile(`(?i)an (\d+) d`), "in $1 day"},
		{regexp.MustCompile(`(?i)an (\d+) j`), "in $1 year"},
		{regexp.MustCompile(`(?i)an (\d+) m`), "in $1 month"},
		{regexp.MustCompile(`(?i)an (\d+) w`), "in $1 week"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(virun \d+ minutt|virun \d+ sekonn|virun \d+ mount|virun \d+ stonn|virun \d+ joer|virun \d+ woch|an \d+ minutt|an \d+ sekonn|virun \d+ dag|virun \d+ min|virun \d+ sek|an \d+ mount|an \d+ stonn|virun \d+ st|an \d+ joer|an \d+ woch|virun \d+ d|virun \d+ j|virun \d+ m|virun \d+ w|an \d+ dag|an \d+ min|an \d+ sek|an \d+ st|an \d+ d|an \d+ j|an \d+ m|an \d+ w)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(virun \d+ minutt|virun \d+ sekonn|virun \d+ mount|virun \d+ stonn|virun \d+ joer|virun \d+ woch|an \d+ minutt|an \d+ sekonn|virun \d+ dag|virun \d+ min|virun \d+ sek|an \d+ mount|an \d+ stonn|virun \d+ st|an \d+ joer|an \d+ woch|virun \d+ d|virun \d+ j|virun \d+ m|virun \d+ w|an \d+ dag|an \d+ min|an \d+ sek|an \d+ st|an \d+ d|an \d+ j|an \d+ m|an \d+ w)$`),
	KnownWords:      []string{"leschte mount", "nachste mount", "donneschdeg", "lescht joer", "lescht woch", "nachst joer", "nachst woch", "this minute", "dese mount", "denschdeg", "dest joer", "samschdeg", "september", "this hour", "des woch", "dezember", "geschter", "mettwoch", "nomettes", "november", "februar", "freideg", "meindeg", "oktober", "sonndeg", "abrell", "august", "januar", "minutt", "sekonn", "maerz", "moies", "mount", "stonn", "haut", "joer", "juli", "juni", "muer", "woch", "abr", "aug", "dag", "den", "dez", "don", "feb", "fre", "gmt", "jan", "jul", "jun", "mae", "mee", "mei", "met", "min", "nov", "now", "okt", "sam", "sek", "sep", "son", "utc", "am", "pm", "st", " ", "'", "+", ",", "-", ".", "/", ":", ";", "@", "[", "]", "d", "j", "m", "w", "z", "|"},
})
