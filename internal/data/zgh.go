// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var zgh_Locale = LocaleData{
	Name:      "zgh",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: map[*regexp.Regexp]string{
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵙⴰ(\z|\W|_)`):        "${1}0 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`):   "${1}0 hour ago${2}",
		regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`): "${1}0 minute ago${2}",
		regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`):  "${1}0 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`):         "${1}0 second ago${2}",
		regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`):   "${1}0 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`):   "${1}0 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)ⵉⴹⵍⵍⵉ(\z|\W|_)`):       "${1}1 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`):  "${1}1 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`):   "${1}1 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`):   "${1}1 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)ⵜⵉⴼⴰⵡⵜ(\z|\W|_)`):      "${1}am${2}",
		regexp.MustCompile(`(\A|\W|_)ⵉⴱⵔ(\z|\W|_)`):         "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)ⵉⴱⵔⵉⵔ(\z|\W|_)`):       "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)ⵖⵓⵛ(\z|\W|_)`):         "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)ⵖⵓⵛⵜ(\z|\W|_)`):        "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵙ(\z|\W|_)`):         "${1}day${2}",
		regexp.MustCompile(`(\A|\W|_)ⴷⵓⵊ(\z|\W|_)`):         "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)ⴷⵓⵊⴰⵏⴱⵉⵔ(\z|\W|_)`):    "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)ⴱⵕⴰ(\z|\W|_)`):         "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)ⴱⵕⴰⵢⵕ(\z|\W|_)`):       "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵉⵎ(\z|\W|_)`):        "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵉⵎⵡⴰⵙ(\z|\W|_)`):     "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)ⵜⴰⵙⵔⴰⴳⵜ(\z|\W|_)`):     "${1}hour${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⴽⴽⴰ(\z|\W|_)`):       "${1}in 1 day${2}",
		regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`):  "${1}in 1 month${2}",
		regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`):   "${1}in 1 week${2}",
		regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`):   "${1}in 1 year${2}",
		regexp.MustCompile(`(\A|\W|_)ⵉⵏⵏ(\z|\W|_)`):         "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)ⵉⵏⵏⴰⵢⵔ(\z|\W|_)`):      "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)ⵢⵓⵍ(\z|\W|_)`):         "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)ⵢⵓⵍⵢⵓⵣ(\z|\W|_)`):      "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)ⵢⵓⵏ(\z|\W|_)`):         "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)ⵢⵓⵏⵢⵓ(\z|\W|_)`):       "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)ⵎⴰⵕ(\z|\W|_)`):         "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)ⵎⴰⵕⵚ(\z|\W|_)`):        "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)ⵎⴰⵢ(\z|\W|_)`):         "${1}may${2}",
		regexp.MustCompile(`(\A|\W|_)ⵎⴰⵢⵢⵓ(\z|\W|_)`):       "${1}may${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵢⵏ(\z|\W|_)`):         "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵢⵏⴰⵙ(\z|\W|_)`):       "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵢⵢⵓⵔ(\z|\W|_)`):       "${1}month${2}",
		regexp.MustCompile(`(\A|\W|_)ⵏⵓⵡ(\z|\W|_)`):         "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)ⵏⵓⵡⴰⵏⴱⵉⵔ(\z|\W|_)`):    "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)ⴽⵜⵓ(\z|\W|_)`):         "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)ⴽⵜⵓⴱⵔ(\z|\W|_)`):       "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)ⵜⴰⴷⴳⴳⵡⴰⵜ(\z|\W|_)`):    "${1}pm${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵉⴹ(\z|\W|_)`):        "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵉⴹⵢⴰⵙ(\z|\W|_)`):     "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)ⵜⴰⵙⵉⵏⵜ(\z|\W|_)`):      "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)ⵛⵓⵜ(\z|\W|_)`):         "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)ⵛⵓⵜⴰⵏⴱⵉⵔ(\z|\W|_)`):    "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⴰ(\z|\W|_)`):         "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⴰⵎⴰⵙ(\z|\W|_)`):      "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⴽⵡ(\z|\W|_)`):         "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⴽⵡⴰⵙ(\z|\W|_)`):       "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵉ(\z|\W|_)`):         "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⵉⵏⴰⵙ(\z|\W|_)`):      "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⴽⵕ(\z|\W|_)`):         "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⴽⵕⴰⵙ(\z|\W|_)`):       "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)ⵉⵎⴰⵍⴰⵙⵙ(\z|\W|_)`):     "${1}week${2}",
		regexp.MustCompile(`(\A|\W|_)ⴰⵙⴳⴳⵡⴰⵙ(\z|\W|_)`):     "${1}year${2}",
	},
}
