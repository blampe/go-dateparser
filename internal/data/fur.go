// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var fur_Locale = merge(nil, LocaleData{
	Name:      "fur",
	DateOrder: "DMY",
	Charset:   []rune("+,-./;@[]bcdefghijklnorstuvwxyz|"),
	Translations: map[string]string{
		"dicembar": "december",
		"novembar": "november",
		"setembar": "september",
		"setemane": "week",
		"domenie":  "sunday",
		"martars":  "tuesday",
		"miercus":  "wednesday",
		"fevrar":   "february",
		"vinars":   "friday",
		"otubar":   "october",
		"sabide":   "saturday",
		"secont":   "second",
		"avril":    "april",
		"avost":    "august",
		"zenar":    "january",
		"minut":    "minute",
		"lunis":    "monday",
		"joibe":    "thursday",
		"jugn":     "june",
		"marc":     "march",
		"avr":      "april",
		"avo":      "august",
		"dic":      "december",
		"fev":      "february",
		"vin":      "friday",
		"gmt":      "gmt",
		"ore":      "hour",
		"zen":      "january",
		"lui":      "july",
		"jug":      "june",
		"mar":      "march",
		"mai":      "may",
		"lun":      "monday",
		"mes":      "month",
		"nov":      "november",
		"otu":      "october",
		"sab":      "saturday",
		"set":      "september",
		"dom":      "sunday",
		"joi":      "thursday",
		"utc":      "utc",
		"mie":      "wednesday",
		"am":       "am",
		"di":       "day",
		"pm":       "pm",
		"an":       "year",
		"'":        "",
		",":        "",
		";":        "",
		"@":        "",
		"[":        "",
		"]":        "",
		"|":        "",
		" ":        " ",
		"+":        "+",
		"-":        "-",
		".":        ".",
		"/":        "/",
		":":        ":",
		"a":        "am",
		"p":        "pm",
		"z":        "z",
	},
	RelativeType: map[string]string{
		"this minute": "0 minute ago",
		"this month":  "0 month ago",
		"last month":  "1 month ago",
		"next month":  "in 1 month",
		"this hour":   "0 hour ago",
		"this week":   "0 week ago",
		"this year":   "0 year ago",
		"last week":   "1 week ago",
		"last year":   "1 year ago",
		"next week":   "in 1 week",
		"next year":   "in 1 year",
		"doman":       "in 1 day",
		"vue":         "0 day ago",
		"now":         "0 second ago",
		"ir":          "1 day ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)(\d+) setemanis indaur`), "$1 week ago"},
		{regexp.MustCompile(`(?i)(\d+) zornadis indaur`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+) setemane indaur`), "$1 week ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) setemanis`), "in $1 week"},
		{regexp.MustCompile(`(?i)(\d+) zornade indaur`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+) seconts indaur`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) zornadis`), "in $1 day"},
		{regexp.MustCompile(`(?i)ca di (\d+) setemane`), "in $1 week"},
		{regexp.MustCompile(`(?i)(\d+) minuts indaur`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)(\d+) secont indaur`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) zornade`), "in $1 day"},
		{regexp.MustCompile(`(?i)ca di (\d+) seconts`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+) minut indaur`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) minuts`), "in $1 minute"},
		{regexp.MustCompile(`(?i)ca di (\d+) secont`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+) oris indaur`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) agns indaur`), "$1 year ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) minut`), "in $1 minute"},
		{regexp.MustCompile(`(?i)(\d+) ore indaur`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) mes indaur`), "$1 month ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) oris`), "in $1 hour"},
		{regexp.MustCompile(`(?i)ca di (\d+) agns`), "in $1 year"},
		{regexp.MustCompile(`(?i)(\d+) an indaur`), "$1 year ago"},
		{regexp.MustCompile(`(?i)ca di (\d+) ore`), "in $1 hour"},
		{regexp.MustCompile(`(?i)ca di (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)ca di (\d+) an`), "in $1 year"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(\d+ setemanis indaur|\d+ setemane indaur|\d+ zornadis indaur|ca di \d+ setemanis|\d+ seconts indaur|\d+ zornade indaur|ca di \d+ setemane|ca di \d+ zornadis|\d+ minuts indaur|\d+ secont indaur|ca di \d+ seconts|ca di \d+ zornade|\d+ minut indaur|ca di \d+ minuts|ca di \d+ secont|\d+ agns indaur|\d+ oris indaur|ca di \d+ minut|\d+ mes indaur|\d+ ore indaur|ca di \d+ agns|ca di \d+ oris|\d+ an indaur|ca di \d+ mes|ca di \d+ ore|ca di \d+ an)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(\d+ setemanis indaur|\d+ setemane indaur|\d+ zornadis indaur|ca di \d+ setemanis|\d+ seconts indaur|\d+ zornade indaur|ca di \d+ setemane|ca di \d+ zornadis|\d+ minuts indaur|\d+ secont indaur|ca di \d+ seconts|ca di \d+ zornade|\d+ minut indaur|ca di \d+ minuts|ca di \d+ secont|\d+ agns indaur|\d+ oris indaur|ca di \d+ minut|\d+ mes indaur|\d+ ore indaur|ca di \d+ agns|ca di \d+ oris|\d+ an indaur|ca di \d+ mes|ca di \d+ ore|ca di \d+ an)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(this minute|last month|next month|this month|last week|last year|next week|next year|this hour|this week|this year|dicembar|novembar|setemane|setembar|domenie|martars|miercus|fevrar|otubar|sabide|secont|vinars|avost|avril|doman|joibe|lunis|minut|zenar|jugn|marc|avo|avr|dic|dom|fev|gmt|joi|jug|lui|lun|mai|mar|mes|mie|nov|now|ore|otu|sab|set|utc|vin|vue|zen|\+|\.|\[|\]|\||am|an|di|ir|pm| |'|,|-|/|:|;|@|a|p|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})
