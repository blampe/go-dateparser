// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var plLocale = LocaleData{
	Name:                  "pl",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "i", "o", "r", "roku", "w", "|", "，"},
	January:               []string{"sty", "styczen", "styczeń", "stycznia", "styczniu"},
	February:              []string{"lut", "lutego", "luty", "lutym"},
	March:                 []string{"mar", "marca", "marcu", "marzec"},
	April:                 []string{"kwi", "kwie", "kwiecien", "kwiecień", "kwietnia", "kwietniu"},
	May:                   []string{"maj", "maja", "maju"},
	June:                  []string{"cze", "czerwca", "czerwcu", "czerwiec"},
	July:                  []string{"lip", "lipca", "lipcu", "lipiec"},
	August:                []string{"sie", "sierpien", "sierpień", "sierpnia", "sierpniu"},
	September:             []string{"wrz", "wrzesien", "wrzesień", "wrzesnia", "wrzesniu", "września", "wrześniu"},
	October:               []string{"paz", "pazdziernik", "pazdziernika", "pazdzierniku", "paź", "październik", "października", "październiku"},
	November:              []string{"lis", "listopad", "listopada", "listopadzie"},
	December:              []string{"gru", "grudnia", "grudniu", "grudzien", "grudzień"},
	Monday:                []string{"pn", "pon", "poniedzialek", "poniedziałek"},
	Tuesday:               []string{"wt", "wto", "wtorek"},
	Wednesday:             []string{"sr", "sro", "sroda", "srode", "śr", "śro", "środa", "środę"},
	Thursday:              []string{"cz", "czw", "czwartek"},
	Friday:                []string{"pi", "pia", "piatek", "pią", "piątek", "pt"},
	Saturday:              []string{"sb", "so", "sob", "sobota", "sobote", "sobotę"},
	Sunday:                []string{"nd", "nie", "niedz", "niedziela", "niedziele", "niedzielę"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"lat", "lata", "r", "rok"},
	Month:                 []string{"mc", "mies", "miesiac", "miesiace", "miesiąc", "miesiąca", "miesiące", "miesięcy"},
	Week:                  []string{"tydz", "tydzien", "tydzień", "tygodni", "tygodnie"},
	Day:                   []string{"dni", "dnia", "dniu", "dzien", "dzień"},
	Hour:                  []string{"g", "godz", "godzin", "godzina", "godzine", "godziny", "godzinę"},
	Minute:                []string{"min", "minut", "minuta", "minute", "minuty", "minutę"},
	Second:                []string{"s", "sek", "sekund", "sekunda", "sekunde", "sekundy", "sekundę"},
	In:                    []string{"za"},
	Ago:                   []string{"temu"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`dzisiaj`},
		`0 hour ago`:   {`ta godzina`},
		`0 minute ago`: {`ta minuta`},
		`0 month ago`:  {`w tym miesiącu`},
		`0 second ago`: {`teraz`},
		`0 week ago`:   {`w tym tygodniu`},
		`0 year ago`:   {`w tym roku`},
		`1 day ago`:    {`wczoraj`},
		`1 month ago`:  {`w zeszłym miesiącu`},
		`1 week ago`:   {`w zeszłym tygodniu`},
		`1 year ago`:   {`w zeszłym roku`},
		`in 1 day`:     {`jutro`},
		`in 1 month`:   {`w przyszłym miesiącu`},
		`in 1 week`:    {`w przyszłym tygodniu`},
		`in 1 year`:    {`w przyszłym roku`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)(\d+) dnia temu`),
			regexp.MustCompile(`(?i)(\d+) dzień temu`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)(\d+) g temu`),
			regexp.MustCompile(`(?i)(\d+) godz temu`),
			regexp.MustCompile(`(?i)(\d+) godziny temu`),
			regexp.MustCompile(`(?i)(\d+) godzinę temu`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)(\d+) min temu`),
			regexp.MustCompile(`(?i)(\d+) minuty temu`),
			regexp.MustCompile(`(?i)(\d+) minutę temu`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)(\d+) mies temu`),
			regexp.MustCompile(`(?i)(\d+) miesiąc temu`),
			regexp.MustCompile(`(?i)(\d+) miesiąca temu`),
			regexp.MustCompile(`(?i)–(\d+) mies`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)(\d+) s temu`),
			regexp.MustCompile(`(?i)(\d+) sek temu`),
			regexp.MustCompile(`(?i)(\d+) sekundy temu`),
			regexp.MustCompile(`(?i)(\d+) sekundę temu`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)(\d+) tydz temu`),
			regexp.MustCompile(`(?i)(\d+) tydzień temu`),
			regexp.MustCompile(`(?i)(\d+) tyg temu`),
			regexp.MustCompile(`(?i)(\d+) tygodnia temu`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)(\d+) rok temu`),
			regexp.MustCompile(`(?i)(\d+) roku temu`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)za (\d+) dnia`),
			regexp.MustCompile(`(?i)za (\d+) dzień`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)za (\d+) g`),
			regexp.MustCompile(`(?i)za (\d+) godz`),
			regexp.MustCompile(`(?i)za (\d+) godziny`),
			regexp.MustCompile(`(?i)za (\d+) godzinę`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)za (\d+) min`),
			regexp.MustCompile(`(?i)za (\d+) minuty`),
			regexp.MustCompile(`(?i)za (\d+) minutę`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)za (\d+) mies`),
			regexp.MustCompile(`(?i)za (\d+) miesiąc`),
			regexp.MustCompile(`(?i)za (\d+) miesiąca`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)za (\d+) s`),
			regexp.MustCompile(`(?i)za (\d+) sek`),
			regexp.MustCompile(`(?i)za (\d+) sekundy`),
			regexp.MustCompile(`(?i)za (\d+) sekundę`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)za (\d+) tydz`),
			regexp.MustCompile(`(?i)za (\d+) tydzień`),
			regexp.MustCompile(`(?i)za (\d+) tyg`),
			regexp.MustCompile(`(?i)za (\d+) tygodnia`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)za (\d+) rok`),
			regexp.MustCompile(`(?i)za (\d+) roku`),
		},
	},
	Simplifications: map[string]string{
		`dzisiaj`:      `0 dnia`,
		`dziś`:         `0 dnia`,
		`jutro`:        `za 1 dnia`,
		`onegdaj`:      `2 dnia`,
		`pojutrze`:     `za 2 dnia`,
		`przedwczoraj`: `2 dnia temu`,
	},
}
