// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var pt_Locale = merge(nil, LocaleData{
	Name:      "pt",
	DateOrder: "DMY",
	Charset:   []rune(`-bcdefghijlnorstuvxz`),
	Simplifications: []ReplacementData{
		{regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)uma(\z|[^\pL\pM\d]|_)`), "${1}1${2}"},
		{regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)um(\z|[^\pL\pM\d]|_)`), "${1}1${2}"},
		{regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)alguns segundos(\z|[^\pL\pM\d]|_)`), "${1}44 segundos${2}"},
	},
	Translations: map[string]string{
		"segunda-feira": "monday",
		"quinta-feira":  "thursday",
		"quarta-feira":  "wednesday",
		"sexta-feira":   "friday",
		"terca-feira":   "tuesday",
		"fevereiro":     "february",
		"septembro":     "september",
		"dezembro":      "december",
		"novembro":      "november",
		"segundos":      "second",
		"setembro":      "september",
		"janeiro":       "january",
		"minutos":       "minute",
		"segunda":       "monday",
		"outubro":       "october",
		"segundo":       "second",
		"domingo":       "sunday",
		"semanas":       "week",
		"agosto":        "august",
		"minuto":        "minute",
		"sabado":        "saturday",
		"quinta":        "thursday",
		"quarta":        "wednesday",
		"semana":        "week",
		"cerca":         "",
		"atras":         "ago",
		"abril":         "april",
		"sexta":         "friday",
		"horas":         "hour",
		"julho":         "july",
		"junho":         "june",
		"marco":         "march",
		"meses":         "month",
		"terca":         "tuesday",
		"dias":          "day",
		"hora":          "hour",
		"maio":          "may",
		"anos":          "year",
		"abr":           "april",
		"ago":           "august",
		"dia":           "day",
		"dez":           "december",
		"fev":           "february",
		"sex":           "friday",
		"gmt":           "gmt",
		"jan":           "january",
		"jul":           "july",
		"jun":           "june",
		"mar":           "march",
		"mai":           "may",
		"min":           "minute",
		"mes":           "month",
		"nov":           "november",
		"out":           "october",
		"sab":           "saturday",
		"seg":           "second",
		"set":           "september",
		"dom":           "sunday",
		"qui":           "thursday",
		"ter":           "tuesday",
		"utc":           "utc",
		"qua":           "wednesday",
		"sem":           "week",
		"ano":           "year",
		"as":            "",
		"de":            "",
		"ha":            "ago",
		"am":            "am",
		"em":            "in",
		"pm":            "pm",
		"'":             "",
		",":             "",
		";":             "",
		"@":             "",
		"[":             "",
		"]":             "",
		"e":             "",
		"|":             "",
		" ":             " ",
		"+":             "+",
		"-":             "-",
		".":             ".",
		"/":             "/",
		":":             ":",
		"h":             "hour",
		"m":             "minute",
		"s":             "second",
		"z":             "z",
	},
	RelativeType: map[string]string{
		"semana passada": "1 week ago",
		"proxima semana": "in 1 week",
		"este minuto":    "0 minute ago",
		"esta semana":    "0 week ago",
		"mes passado":    "1 month ago",
		"ano passado":    "1 year ago",
		"proximo mes":    "in 1 month",
		"proximo ano":    "in 1 year",
		"esta hora":      "0 hour ago",
		"anteontem":      "2 day ago",
		"este mes":       "0 month ago",
		"este ano":       "0 year ago",
		"amanha":         "in 1 day",
		"agora":          "0 second ago",
		"ontem":          "1 day ago",
		"hoje":           "0 day ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)ha (\d+) segundos`), "$1 second ago"},
		{regexp.MustCompile(`(?i)em (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) minutos`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ha (\d+) segundo`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ha (\d+) semanas`), "$1 week ago"},
		{regexp.MustCompile(`(?i)em (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)em (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)em (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)ha (\d+) minuto`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ha (\d+) semana`), "$1 week ago"},
		{regexp.MustCompile(`(?i)em (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)em (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)ha (\d+) horas`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)ha (\d+) meses`), "$1 month ago"},
		{regexp.MustCompile(`(?i)em (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)em (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)ha (\d+) dias`), "$1 day ago"},
		{regexp.MustCompile(`(?i)ha (\d+) hora`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)ha (\d+) mins`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ha (\d+) anos`), "$1 year ago"},
		{regexp.MustCompile(`(?i)em (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)em (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)em (\d+) mins`), "in $1 minute"},
		{regexp.MustCompile(`(?i)em (\d+) segs`), "in $1 second"},
		{regexp.MustCompile(`(?i)em (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)ha (\d+) dia`), "$1 day ago"},
		{regexp.MustCompile(`(?i)ha (\d+) min`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)ha (\d+) mes`), "$1 month ago"},
		{regexp.MustCompile(`(?i)ha (\d+) seg`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ha (\d+) sem`), "$1 week ago"},
		{regexp.MustCompile(`(?i)ha (\d+) ano`), "$1 year ago"},
		{regexp.MustCompile(`(?i)em (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)em (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)em (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)em (\d+) seg`), "in $1 second"},
		{regexp.MustCompile(`(?i)em (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)em (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)ha (\d+) h`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)em (\d+) h`), "in $1 hour"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|marco|meses|ontem|sexta|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_AO_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-AO",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_CH_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-CH",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_CV_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-CV",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_GQ_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-GQ",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_GW_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-GW",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_LU_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-LU",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_MO_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-MO",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_MZ_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-MZ",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_PT_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-PT",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_ST_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-ST",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var pt_TL_Locale = merge(&pt_Locale, LocaleData{
	Name:      "pt-TL",
	DateOrder: "DMY",
	Translations: map[string]string{
		"da manha": "am",
		"da tarde": "pm",
		"manha":    "am",
		"tarde":    "pm",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)dentro de (\d+) segundos`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minutos`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) segundo`), "in $1 second"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semanas`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) semana`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) horas`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) meses`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dias`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) hora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) anos`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) dia`), "in $1 day"},
		{regexp.MustCompile(`(?i)dentro de (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)dentro de (\d+) mes`), "in $1 month"},
		{regexp.MustCompile(`(?i)dentro de (\d+) sem`), "in $1 week"},
		{regexp.MustCompile(`(?i)dentro de (\d+) ano`), "in $1 year"},
		{regexp.MustCompile(`(?i)dentro de (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)dentro de (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)ha (\d+) s`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(dentro de \d+ segundos|dentro de \d+ minutos|dentro de \d+ segundo|dentro de \d+ semanas|dentro de \d+ minuto|dentro de \d+ semana|dentro de \d+ horas|dentro de \d+ meses|dentro de \d+ anos|dentro de \d+ dias|dentro de \d+ hora|dentro de \d+ ano|dentro de \d+ dia|dentro de \d+ mes|dentro de \d+ min|dentro de \d+ sem|dentro de \d+ h|dentro de \d+ s|em \d+ segundos|ha \d+ segundos|em \d+ minutos|em \d+ segundo|em \d+ semanas|ha \d+ minutos|ha \d+ segundo|ha \d+ semanas|em \d+ minuto|em \d+ semana|ha \d+ minuto|ha \d+ semana|em \d+ horas|em \d+ meses|ha \d+ horas|ha \d+ meses|em \d+ anos|em \d+ dias|em \d+ hora|em \d+ mins|em \d+ segs|ha \d+ anos|ha \d+ dias|ha \d+ hora|ha \d+ mins|em \d+ ano|em \d+ dia|em \d+ mes|em \d+ min|em \d+ seg|em \d+ sem|ha \d+ ano|ha \d+ dia|ha \d+ mes|ha \d+ min|ha \d+ seg|ha \d+ sem|em \d+ h|ha \d+ h|ha \d+ s)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(proxima semana|semana passada|segunda-feira|quarta-feira|quinta-feira|ano passado|esta semana|este minuto|mes passado|proximo ano|proximo mes|sexta-feira|terca-feira|anteontem|esta hora|fevereiro|septembro|da manha|da tarde|dezembro|este ano|este mes|novembro|segundos|setembro|domingo|janeiro|minutos|outubro|segunda|segundo|semanas|agosto|amanha|minuto|quarta|quinta|sabado|semana|abril|agora|atras|cerca|horas|julho|junho|manha|marco|meses|ontem|sexta|tarde|terca|anos|dias|hoje|hora|maio|abr|ago|ano|dez|dia|dom|fev|gmt|jan|jul|jun|mai|mar|mes|min|nov|out|qua|qui|sab|seg|sem|set|sex|ter|utc|\+|\.|\[|\]|\||am|as|de|em|ha|pm| |'|,|-|/|:|;|@|e|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})
