// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var dz_Locale = merge(nil, LocaleData{
	Name:      "dz",
	DateOrder: "YMD",
	Charset:   []rune(`ceghiklnorstuwxyz་༠༡༢༣༤༥༦༧༨༩ཁགངཅཆཉདནཔཕབམཙཚཝཞཟའརལསཱིེོུྐྒྔྤྱྲླྷ`),
	Translations: map[string]string{
		"ས་ཟ་བཅ་གཉས་པ་": "december",
		"ས་ཟ་བཅ་གཅག་པ་": "november",
		"ཟ་བཅ་གཉས་པ་":   "december",
		"གཟའ་མག་དམར་":   "monday",
		"ཟ་བཅ་གཅག་པ་":   "november",
		"ས་ཟ་བརད་པ་":    "august",
		"ས་ཟ་གཉས་པ་":    "february",
		"ས་ཟ་བདན་པ་":    "july",
		"ས་ཟ་གསམ་པ་":    "march",
		"གཟའ་པ་སངས་":    "thursday",
		"གཟའ་སན་པ་":     "friday",
		"ས་ཟ་བཅ་པ་":     "october",
		"ས་ཟ་དག་པ་":     "september",
		"གཟའ་ལག་པ་":     "tuesday",
		"གཟའ་ཕར་བ་":     "wednesday",
		"ས་ཟ་བཞ་པ":      "april",
		"ཟ་བརད་པ་":      "august",
		"ཟ་གཉས་པ་":      "february",
		"ས་ཟ་དངཔ་":      "january",
		"ཟ་བདན་པ་":      "july",
		"ས་ཟ་དག་པ":      "june",
		"ཟ་གསམ་པ་":      "march",
		"ས་ཟ་ལ་པ་":      "may",
		"གཟའ་ཉ་མ་":      "saturday",
		"གཟའ་ཟ་བ་":      "sunday",
		"ཟ་བཞ་པ་":       "april",
		"ཟ་བཅ་པ་":       "october",
		"ཟ་དག་པ་":       "september",
		"ཟ་དངཔ་":        "january",
		"ཟ་དག་པ":        "june",
		"ཟ་ལ་པ་":        "may",
		"བདན་ཕག":        "week",
		"སར་ཆ་":         "second",
		"ས་ཆ་":          "am",
		"ཟ་༡༢":          "december",
		"ཆ་ཚད":          "hour",
		"སར་མ":          "minute",
		"ཟ་ཝ་":          "month",
		"ཟ་༡༡":          "november",
		"ཟ་༡༠":          "october",
		"ཕ་ཆ་":          "pm",
		"སངས་":          "thursday",
		"ཟ་༤":           "april",
		"ཟ་༨":           "august",
		"ཚས་":           "day",
		"ཟ་༢":           "february",
		"སན་":           "friday",
		"gmt":           "gmt",
		"ཟ་༡":           "january",
		"ཟ་༧":           "july",
		"ཟ་༦":           "june",
		"ཟ་༣":           "march",
		"ཟ་༥":           "may",
		"མར་":           "monday",
		"ཟ་༩":           "september",
		"ལག་":           "tuesday",
		"utc":           "utc",
		"ཕར་":           "wednesday",
		"am":            "am",
		"pm":            "pm",
		"ཉ་":            "saturday",
		"ཟ་":            "sunday",
		"'":             "",
		",":             "",
		";":             "",
		"@":             "",
		"[":             "",
		"]":             "",
		"|":             "",
		" ":             " ",
		"+":             "+",
		"-":             "-",
		".":             ".",
		"/":             "/",
		":":             ":",
		"ལ":             "year",
		"z":             "z",
	},
	RelativeType: map[string]string{
		"this minute": "0 minute ago",
		"this month":  "0 month ago",
		"last month":  "1 month ago",
		"next month":  "in 1 month",
		"this hour":   "0 hour ago",
		"this week":   "0 week ago",
		"this year":   "0 year ago",
		"last week":   "1 week ago",
		"last year":   "1 year ago",
		"next week":   "in 1 week",
		"next year":   "in 1 year",
		"ནངས་པ་":      "in 1 day",
		"ད་རས་":       "0 day ago",
		"ཁ་ཙ་":        "1 day ago",
		"now":         "0 second ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)བངན་ཕག་ (\d+) ཧ་མ་`), "$1 week ago"},
		{regexp.MustCompile(`(?i)ལ་འཁར་ (\d+) ཧ་མ་`), "$1 year ago"},
		{regexp.MustCompile(`(?i)བངན་ཕག་ (\d+) ནང་`), "in $1 week"},
		{regexp.MustCompile(`(?i)ཆ་ཚད་ (\d+) ཧ་མ་`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)སར་མ་ (\d+) ཧ་མ་`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)སར་ཆ་ (\d+) ཧ་མ་`), "$1 second ago"},
		{regexp.MustCompile(`(?i)ལ་འཁར་ (\d+) ནང་`), "in $1 year"},
		{regexp.MustCompile(`(?i)ཉནམ་ (\d+) ཧ་མ་`), "$1 day ago"},
		{regexp.MustCompile(`(?i)ཆ་ཚད་ (\d+) ནང་`), "in $1 hour"},
		{regexp.MustCompile(`(?i)སར་མ་ (\d+) ནང་`), "in $1 minute"},
		{regexp.MustCompile(`(?i)སར་ཆ་ (\d+) ནང་`), "in $1 second"},
		{regexp.MustCompile(`(?i)ཟཝ་ (\d+) ཧ་མ་`), "$1 month ago"},
		{regexp.MustCompile(`(?i)ཉནམ་ (\d+) ནང་`), "in $1 day"},
		{regexp.MustCompile(`(?i)ཟཝ་ (\d+) ནང་`), "in $1 month"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(བངན་ཕག་ \d+ ཧ་མ་|བངན་ཕག་ \d+ ནང་|ལ་འཁར་ \d+ ཧ་མ་|ཆ་ཚད་ \d+ ཧ་མ་|ལ་འཁར་ \d+ ནང་|སར་ཆ་ \d+ ཧ་མ་|སར་མ་ \d+ ཧ་མ་|ཆ་ཚད་ \d+ ནང་|ཉནམ་ \d+ ཧ་མ་|སར་ཆ་ \d+ ནང་|སར་མ་ \d+ ནང་|ཉནམ་ \d+ ནང་|ཟཝ་ \d+ ཧ་མ་|ཟཝ་ \d+ ནང་)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(བངན་ཕག་ \d+ ཧ་མ་|བངན་ཕག་ \d+ ནང་|ལ་འཁར་ \d+ ཧ་མ་|ཆ་ཚད་ \d+ ཧ་མ་|ལ་འཁར་ \d+ ནང་|སར་ཆ་ \d+ ཧ་མ་|སར་མ་ \d+ ཧ་མ་|ཆ་ཚད་ \d+ ནང་|ཉནམ་ \d+ ཧ་མ་|སར་ཆ་ \d+ ནང་|སར་མ་ \d+ ནང་|ཉནམ་ \d+ ནང་|ཟཝ་ \d+ ཧ་མ་|ཟཝ་ \d+ ནང་)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(ས་ཟ་བཅ་གཅག་པ་|ས་ཟ་བཅ་གཉས་པ་|this minute|གཟའ་མག་དམར་|ཟ་བཅ་གཅག་པ་|ཟ་བཅ་གཉས་པ་|last month|next month|this month|གཟའ་པ་སངས་|ས་ཟ་གཉས་པ་|ས་ཟ་གསམ་པ་|ས་ཟ་བདན་པ་|ས་ཟ་བརད་པ་|last week|last year|next week|next year|this hour|this week|this year|གཟའ་ཕར་བ་|གཟའ་ལག་པ་|གཟའ་སན་པ་|ས་ཟ་དག་པ་|ས་ཟ་བཅ་པ་|གཟའ་ཉ་མ་|གཟའ་ཟ་བ་|ཟ་གཉས་པ་|ཟ་གསམ་པ་|ཟ་བདན་པ་|ཟ་བརད་པ་|ས་ཟ་དག་པ|ས་ཟ་དངཔ་|ས་ཟ་བཞ་པ|ས་ཟ་ལ་པ་|ཟ་དག་པ་|ཟ་བཅ་པ་|ཟ་བཞ་པ་|ནངས་པ་|བདན་ཕག|ཟ་དག་པ|ཟ་དངཔ་|ཟ་ལ་པ་|ད་རས་|སར་ཆ་|ཁ་ཙ་|ཆ་ཚད|ཕ་ཆ་|ཟ་༡༠|ཟ་༡༡|ཟ་༡༢|ཟ་ཝ་|ས་ཆ་|སངས་|སར་མ|gmt|now|utc|ཕར་|མར་|ཚས་|ཟ་༡|ཟ་༢|ཟ་༣|ཟ་༤|ཟ་༥|ཟ་༦|ཟ་༧|ཟ་༨|ཟ་༩|ལག་|སན་|\+|\.|\[|\]|\||am|pm|ཉ་|ཟ་| |'|,|-|/|:|;|@|z|ལ)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})
