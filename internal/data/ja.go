// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var ja_Locale = merge(nil, LocaleData{
	Name:          "ja",
	DateOrder:     "YMD",
	NoWordSpacing: true,
	SkipWords:     []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|", "約"},
	Simplifications: []ReplacementData{
		{regexp.MustCompile(`(?i)(\d+)年(?:\s+)?(\d+)月(?:\s+)?(\d+)日`), "$1-$2-$3"},
		{regexp.MustCompile(`(?i)(\d+)月(?:\s+)?(\d+)日`), "$1-$2"},
		{regexp.MustCompile(`(?i)(\d+)時(?:\s+)?(\d+)分(?:\s+)?(\d+)秒`), "$1:$2:$3"},
		{regexp.MustCompile(`(?i)(\d+)時(?:\s+)?(\d+)分`), "$1:$2"},
		{regexp.MustCompile(`(?i)(\d+)時$`), "$1:00"},
	},
	Translations: map[string]string{
		"12月": "december",
		"十二月": "december",
		"(金)": "friday",
		"金曜日": "friday",
		"gmt": "gmt",
		"今から": "in",
		"(月)": "monday",
		"月曜日": "monday",
		"11月": "november",
		"十一月": "november",
		"10月": "october",
		"(土)": "saturday",
		"土曜日": "saturday",
		"(日)": "sunday",
		"日曜日": "sunday",
		"(木)": "thursday",
		"木曜日": "thursday",
		"(火)": "tuesday",
		"火曜日": "tuesday",
		"utc": "utc",
		"(水)": "wednesday",
		"水曜日": "wednesday",
		"am":  "am",
		"午前":  "am",
		"4月":  "april",
		"四月":  "april",
		"8月":  "august",
		"八月":  "august",
		"日間":  "day",
		"2月":  "february",
		"二月":  "february",
		"時間":  "hour",
		"1月":  "january",
		"一月":  "january",
		"7月":  "july",
		"七月":  "july",
		"6月":  "june",
		"六月":  "june",
		"3月":  "march",
		"三月":  "march",
		"5月":  "may",
		"五月":  "may",
		"分間":  "minute",
		"か月":  "month",
		"カ月":  "month",
		"ヶ月":  "month",
		"十月":  "october",
		"pm":  "pm",
		"午後":  "pm",
		"秒間":  "second",
		"9月":  "september",
		"九月":  "september",
		"週間":  "week",
		"'":   "",
		",":   "",
		";":   "",
		"@":   "",
		"[":   "",
		"]":   "",
		"|":   "",
		"約":   "",
		" ":   " ",
		"+":   "+",
		"-":   "-",
		".":   ".",
		"/":   "/",
		":":   ":",
		"前":   "ago",
		"金":   "friday",
		"時":   "hour",
		"て":   "in",
		"分":   "minute",
		"月":   "monday",
		"土":   "saturday",
		"秒":   "second",
		"日":   "sunday",
		"木":   "thursday",
		"火":   "tuesday",
		"水":   "wednesday",
		"週":   "week",
		"年":   "year",
		"z":   "z",
	},
	RelativeType: map[string]string{
		"1 時間以内": "0 hour ago",
		"1 分以内":  "0 minute ago",
		"一昨日":    "2 day ago",
		"先々週":    "2 week ago",
		"今日":     "0 day ago",
		"今月":     "0 month ago",
		"現在":     "0 second ago",
		"今週":     "0 week ago",
		"今年":     "0 year ago",
		"昨日":     "1 day ago",
		"先月":     "1 month ago",
		"先週":     "1 week ago",
		"去年":     "1 year ago",
		"昨年":     "1 year ago",
		"明日":     "in 1 day",
		"翌月":     "in 1 month",
		"翌週":     "in 1 week",
		"翌年":     "in 1 year",
		"今":      "0 second ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)(\d+) 時間前`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) か月前`), "$1 month ago"},
		{regexp.MustCompile(`(?i)(\d+) 週間前`), "$1 week ago"},
		{regexp.MustCompile(`(?i)(\d+) 時間後`), "in $1 hour"},
		{regexp.MustCompile(`(?i)(\d+) か月後`), "in $1 month"},
		{regexp.MustCompile(`(?i)(\d+) 週間後`), "in $1 week"},
		{regexp.MustCompile(`(?i)(\d+) 日前`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+)時間前`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) 分前`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)(\d+)か月前`), "$1 month ago"},
		{regexp.MustCompile(`(?i)(\d+) 秒前`), "$1 second ago"},
		{regexp.MustCompile(`(?i)(\d+)週間前`), "$1 week ago"},
		{regexp.MustCompile(`(?i)(\d+) 年前`), "$1 year ago"},
		{regexp.MustCompile(`(?i)(\d+) 日後`), "in $1 day"},
		{regexp.MustCompile(`(?i)(\d+)時間後`), "in $1 hour"},
		{regexp.MustCompile(`(?i)(\d+) 分後`), "in $1 minute"},
		{regexp.MustCompile(`(?i)(\d+)か月後`), "in $1 month"},
		{regexp.MustCompile(`(?i)(\d+) 秒後`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+)週間後`), "in $1 week"},
		{regexp.MustCompile(`(?i)(\d+) 年後`), "in $1 year"},
		{regexp.MustCompile(`(?i)(\d+)日前`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+)分前`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)(\d+)秒前`), "$1 second ago"},
		{regexp.MustCompile(`(?i)(\d+)年前`), "$1 year ago"},
		{regexp.MustCompile(`(?i)(\d+)日後`), "in $1 day"},
		{regexp.MustCompile(`(?i)(\d+)分後`), "in $1 minute"},
		{regexp.MustCompile(`(?i)(\d+)秒後`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+)年後`), "in $1 year"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\d+ か月前|\d+ か月後|\d+ 時間前|\d+ 時間後|\d+ 週間前|\d+ 週間後|\d+ 分前|\d+ 分後|\d+ 年前|\d+ 年後|\d+ 日前|\d+ 日後|\d+ 秒前|\d+ 秒後|\d+か月前|\d+か月後|\d+時間前|\d+時間後|\d+週間前|\d+週間後|\d+分前|\d+分後|\d+年前|\d+年後|\d+日前|\d+日後|\d+秒前|\d+秒後)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(\d+ か月前|\d+ か月後|\d+ 時間前|\d+ 時間後|\d+ 週間前|\d+ 週間後|\d+ 分前|\d+ 分後|\d+ 年前|\d+ 年後|\d+ 日前|\d+ 日後|\d+ 秒前|\d+ 秒後|\d+か月前|\d+か月後|\d+時間前|\d+時間後|\d+週間前|\d+週間後|\d+分前|\d+分後|\d+年前|\d+年後|\d+日前|\d+日後|\d+秒前|\d+秒後)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?)(1 時間以内|1 分以内|\(土\)|\(日\)|\(月\)|\(木\)|\(水\)|\(火\)|\(金\)|10月|11月|12月|gmt|utc|一昨日|今から|先々週|十一月|十二月|土曜日|日曜日|月曜日|木曜日|水曜日|火曜日|金曜日|1月|2月|3月|4月|5月|6月|7月|8月|9月|\+|\.|\[|\]|\||am|pm|か月|カ月|ヶ月|一月|七月|三月|九月|二月|五月|今年|今日|今月|今週|先月|先週|八月|六月|分間|十月|午前|午後|去年|四月|日間|明日|昨年|昨日|時間|現在|秒間|翌年|翌月|翌週|週間| |'|,|-|/|:|;|@|z|て|今|分|前|土|年|日|時|月|木|水|火|秒|約|週|金)(.*)$`),
})
