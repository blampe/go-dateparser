// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var gsw_Locale = LocaleData{
	Name:      "gsw",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: map[*regexp.Regexp]string{
		regexp.MustCompile(`(\A|\W|_)hüt(\z|\W|_)`):          "${1}0 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`):    "${1}0 hour ago${2}",
		regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`):  "${1}0 minute ago${2}",
		regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`):   "${1}0 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`):          "${1}0 second ago${2}",
		regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`):    "${1}0 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`):    "${1}0 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)geschter(\z|\W|_)`):     "${1}1 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`):   "${1}1 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`):    "${1}1 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`):    "${1}1 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)am vormittag(\z|\W|_)`): "${1}am${2}",
		regexp.MustCompile(`(\A|\W|_)vorm(\z|\W|_)`):         "${1}am${2}",
		regexp.MustCompile(`(\A|\W|_)vormittag(\z|\W|_)`):    "${1}am${2}",
		regexp.MustCompile(`(\A|\W|_)apr(\z|\W|_)`):          "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)april(\z|\W|_)`):        "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)aug(\z|\W|_)`):          "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)auguscht(\z|\W|_)`):     "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)tag(\z|\W|_)`):          "${1}day${2}",
		regexp.MustCompile(`(\A|\W|_)dez(\z|\W|_)`):          "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)dezämber(\z|\W|_)`):     "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)feb(\z|\W|_)`):          "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)februar(\z|\W|_)`):      "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)fr(\z|\W|_)`):           "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)friitig(\z|\W|_)`):      "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)schtund(\z|\W|_)`):      "${1}hour${2}",
		regexp.MustCompile(`(\A|\W|_)moorn(\z|\W|_)`):        "${1}in 1 day${2}",
		regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`):   "${1}in 1 month${2}",
		regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`):    "${1}in 1 week${2}",
		regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`):    "${1}in 1 year${2}",
		regexp.MustCompile(`(\A|\W|_)jan(\z|\W|_)`):          "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)januar(\z|\W|_)`):       "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)jul(\z|\W|_)`):          "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)juli(\z|\W|_)`):         "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)jun(\z|\W|_)`):          "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)juni(\z|\W|_)`):         "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)mär(\z|\W|_)`):          "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)märz(\z|\W|_)`):         "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)mai(\z|\W|_)`):          "${1}may${2}",
		regexp.MustCompile(`(\A|\W|_)mä(\z|\W|_)`):           "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)määntig(\z|\W|_)`):      "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)monet(\z|\W|_)`):        "${1}month${2}",
		regexp.MustCompile(`(\A|\W|_)nov(\z|\W|_)`):          "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)novämber(\z|\W|_)`):     "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)okt(\z|\W|_)`):          "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)oktoober(\z|\W|_)`):     "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)am namittag(\z|\W|_)`):  "${1}pm${2}",
		regexp.MustCompile(`(\A|\W|_)nam(\z|\W|_)`):          "${1}pm${2}",
		regexp.MustCompile(`(\A|\W|_)namittag(\z|\W|_)`):     "${1}pm${2}",
		regexp.MustCompile(`(\A|\W|_)sa(\z|\W|_)`):           "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)samschtig(\z|\W|_)`):    "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)sekunde(\z|\W|_)`):      "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)sep(\z|\W|_)`):          "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)septämber(\z|\W|_)`):    "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)su(\z|\W|_)`):           "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)sunntig(\z|\W|_)`):      "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)du(\z|\W|_)`):           "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)dunschtig(\z|\W|_)`):    "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)zi(\z|\W|_)`):           "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)ziischtig(\z|\W|_)`):    "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)mi(\z|\W|_)`):           "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)mittwuch(\z|\W|_)`):     "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)wuche(\z|\W|_)`):        "${1}week${2}",
		regexp.MustCompile(`(\A|\W|_)jaar(\z|\W|_)`):         "${1}year${2}",
	},
}

var gsw_FR_Locale = LocaleData{
	Name:      "gsw-FR",
	Parent:    &gsw_Locale,
	DateOrder: "DMY",
}

var gsw_LI_Locale = LocaleData{
	Name:      "gsw-LI",
	Parent:    &gsw_Locale,
	DateOrder: "DMY",
}
