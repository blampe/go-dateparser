// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var nl_Locale = LocaleData{
	Name:      "nl",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "om", "|"},
	Translations: map[*regexp.Regexp]string{
		regexp.MustCompile(`(\A|\W|_)(\d+) dag geleden(\z|\W|_)`):      "${1}$2 day ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) dagen geleden(\z|\W|_)`):    "${1}$2 day ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) dgn geleden(\z|\W|_)`):      "${1}$2 day ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) uur geleden(\z|\W|_)`):      "${1}$2 hour ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) maand geleden(\z|\W|_)`):    "${1}$2 month ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) maanden geleden(\z|\W|_)`):  "${1}$2 month ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) sec geleden(\z|\W|_)`):      "${1}$2 second ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) seconde geleden(\z|\W|_)`):  "${1}$2 second ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) seconden geleden(\z|\W|_)`): "${1}$2 second ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) week geleden(\z|\W|_)`):     "${1}$2 week ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) weken geleden(\z|\W|_)`):    "${1}$2 week ago${3}",
		regexp.MustCompile(`(\A|\W|_)(\d+) jaar geleden(\z|\W|_)`):     "${1}$2 year ago${3}",
		regexp.MustCompile(`(\A|\W|_)vandaag(\z|\W|_)`):                "${1}0 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)binnen een uur(\z|\W|_)`):         "${1}0 hour ago${2}",
		regexp.MustCompile(`(\A|\W|_)binnen een minuut(\z|\W|_)`):      "${1}0 minute ago${2}",
		regexp.MustCompile(`(\A|\W|_)deze maand(\z|\W|_)`):             "${1}0 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)nu(\z|\W|_)`):                     "${1}0 second ago${2}",
		regexp.MustCompile(`(\A|\W|_)deze week(\z|\W|_)`):              "${1}0 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)dit jaar(\z|\W|_)`):               "${1}0 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)gisteren(\z|\W|_)`):               "${1}1 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)vorige maand(\z|\W|_)`):           "${1}1 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)vorige week(\z|\W|_)`):            "${1}1 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)vorig jaar(\z|\W|_)`):             "${1}1 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)vorige jaar(\z|\W|_)`):            "${1}1 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)eergisteren(\z|\W|_)`):            "${1}2 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)geleden(\z|\W|_)`):                "${1}ago${2}",
		regexp.MustCompile(`(\A|\W|_)am(\z|\W|_)`):                     "${1}am${2}",
		regexp.MustCompile(`(\A|\W|_)apr(\z|\W|_)`):                    "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)april(\z|\W|_)`):                  "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)aug(\z|\W|_)`):                    "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)augustus(\z|\W|_)`):               "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)dag(\z|\W|_)`):                    "${1}day${2}",
		regexp.MustCompile(`(\A|\W|_)dagen(\z|\W|_)`):                  "${1}day${2}",
		regexp.MustCompile(`(\A|\W|_)dec(\z|\W|_)`):                    "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)december(\z|\W|_)`):               "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)feb(\z|\W|_)`):                    "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)februari(\z|\W|_)`):               "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)vr(\z|\W|_)`):                     "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)vrijdag(\z|\W|_)`):                "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)uur(\z|\W|_)`):                    "${1}hour${2}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) dag(\z|\W|_)`):         "${1}in $2 day${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) dagen(\z|\W|_)`):       "${1}in $2 day${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) dgn(\z|\W|_)`):         "${1}in $2 day${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) uur(\z|\W|_)`):         "${1}in $2 hour${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) min(\z|\W|_)`):         "${1}in $2 minute${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) minuten(\z|\W|_)`):     "${1}in $2 minute${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) minuut(\z|\W|_)`):      "${1}in $2 minute${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) maand(\z|\W|_)`):       "${1}in $2 month${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) maanden(\z|\W|_)`):     "${1}in $2 month${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) sec(\z|\W|_)`):         "${1}in $2 second${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) seconde(\z|\W|_)`):     "${1}in $2 second${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) seconden(\z|\W|_)`):    "${1}in $2 second${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) week(\z|\W|_)`):        "${1}in $2 week${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) weken(\z|\W|_)`):       "${1}in $2 week${3}",
		regexp.MustCompile(`(\A|\W|_)over (\d+) jaar(\z|\W|_)`):        "${1}in $2 year${3}",
		regexp.MustCompile(`(\A|\W|_)morgen(\z|\W|_)`):                 "${1}in 1 day${2}",
		regexp.MustCompile(`(\A|\W|_)volgende maand(\z|\W|_)`):         "${1}in 1 month${2}",
		regexp.MustCompile(`(\A|\W|_)volgende week(\z|\W|_)`):          "${1}in 1 week${2}",
		regexp.MustCompile(`(\A|\W|_)volgend jaar(\z|\W|_)`):           "${1}in 1 year${2}",
		regexp.MustCompile(`(\A|\W|_)overmorgen(\z|\W|_)`):             "${1}in 2 day${2}",
		regexp.MustCompile(`(\A|\W|_)in(\z|\W|_)`):                     "${1}in${2}",
		regexp.MustCompile(`(\A|\W|_)jan(\z|\W|_)`):                    "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)januari(\z|\W|_)`):                "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)jul(\z|\W|_)`):                    "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)juli(\z|\W|_)`):                   "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)jun(\z|\W|_)`):                    "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)juni(\z|\W|_)`):                   "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)maart(\z|\W|_)`):                  "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)mrt(\z|\W|_)`):                    "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)mei(\z|\W|_)`):                    "${1}may${2}",
		regexp.MustCompile(`(\A|\W|_)minuten(\z|\W|_)`):                "${1}minute${2}",
		regexp.MustCompile(`(\A|\W|_)ma(\z|\W|_)`):                     "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)maandag(\z|\W|_)`):                "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)maand(\z|\W|_)`):                  "${1}month${2}",
		regexp.MustCompile(`(\A|\W|_)maanden(\z|\W|_)`):                "${1}month${2}",
		regexp.MustCompile(`(\A|\W|_)mnd(\z|\W|_)`):                    "${1}month${2}",
		regexp.MustCompile(`(\A|\W|_)nov(\z|\W|_)`):                    "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)november(\z|\W|_)`):               "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)okt(\z|\W|_)`):                    "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)oktober(\z|\W|_)`):                "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)pm(\z|\W|_)`):                     "${1}pm${2}",
		regexp.MustCompile(`(\A|\W|_)za(\z|\W|_)`):                     "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)zaterdag(\z|\W|_)`):               "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)s(\z|\W|_)`):                      "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)sec(\z|\W|_)`):                    "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)seconde(\z|\W|_)`):                "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)seconden(\z|\W|_)`):               "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)sep(\z|\W|_)`):                    "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)september(\z|\W|_)`):              "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)zo(\z|\W|_)`):                     "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)zondag(\z|\W|_)`):                 "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)do(\z|\W|_)`):                     "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)donderdag(\z|\W|_)`):              "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)di(\z|\W|_)`):                     "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)dinsdag(\z|\W|_)`):                "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)wo(\z|\W|_)`):                     "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)woensdag(\z|\W|_)`):               "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)week(\z|\W|_)`):                   "${1}week${2}",
		regexp.MustCompile(`(\A|\W|_)weken(\z|\W|_)`):                  "${1}week${2}",
		regexp.MustCompile(`(\A|\W|_)wk(\z|\W|_)`):                     "${1}week${2}",
		regexp.MustCompile(`(\A|\W|_)jaar(\z|\W|_)`):                   "${1}year${2}",
		regexp.MustCompile(`(\A|\W|_)jr(\z|\W|_)`):                     "${1}year${2}",
	},
}

var nl_AW_Locale = LocaleData{
	Name:      "nl-AW",
	Parent:    &nl_Locale,
	DateOrder: "DMY",
}

var nl_BE_Locale = LocaleData{
	Name:      "nl-BE",
	Parent:    &nl_Locale,
	DateOrder: "DMY",
}

var nl_BQ_Locale = LocaleData{
	Name:      "nl-BQ",
	Parent:    &nl_Locale,
	DateOrder: "DMY",
}

var nl_CW_Locale = LocaleData{
	Name:      "nl-CW",
	Parent:    &nl_Locale,
	DateOrder: "DMY",
}

var nl_SR_Locale = LocaleData{
	Name:      "nl-SR",
	Parent:    &nl_Locale,
	DateOrder: "DMY",
}

var nl_SX_Locale = LocaleData{
	Name:      "nl-SX",
	Parent:    &nl_Locale,
	DateOrder: "DMY",
}
