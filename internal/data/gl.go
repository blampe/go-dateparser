// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var gl_Locale = LocaleData{
	Name:                  "gl",
	DateOrder:             "DMY",
	January:               []string{"xan", "xaneiro"},
	February:              []string{"feb", "febreiro"},
	March:                 []string{"mar", "marzo"},
	April:                 []string{"abr", "abril"},
	May:                   []string{"maio"},
	June:                  []string{"xuño"},
	July:                  []string{"xul", "xullo"},
	August:                []string{"ago", "agosto"},
	September:             []string{"set", "setembro"},
	October:               []string{"out", "outubro"},
	November:              []string{"nov", "novembro"},
	December:              []string{"dec", "decembro"},
	Monday:                []string{"luns"},
	Tuesday:               []string{"mar", "martes"},
	Wednesday:             []string{"mér", "mércores"},
	Thursday:              []string{"xov", "xoves"},
	Friday:                []string{"ven", "venres"},
	Saturday:              []string{"sáb", "sábado"},
	Sunday:                []string{"dom", "domingo"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"a", "ano"},
	Month:                 []string{"m", "mes"},
	Week:                  []string{"sem", "semana"},
	Day:                   []string{"d", "día"},
	Hour:                  []string{"h", "hora"},
	Minute:                []string{"min", "minuto"},
	Second:                []string{"s", "segundo"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`hoxe`},
		`0 hour ago`:   {`nesta hora`},
		`0 minute ago`: {`neste minuto`},
		`0 month ago`:  {`este m`, `este mes`},
		`0 second ago`: {`agora`},
		`0 week ago`:   {`esta sem`, `esta semana`},
		`0 year ago`:   {`este ano`},
		`1 day ago`:    {`onte`},
		`1 month ago`:  {`m pasado`, `o mes pasado`},
		`1 week ago`:   {`a semana pasada`, `sem pasada`},
		`1 year ago`:   {`ano pasado`, `o ano pasado`},
		`in 1 day`:     {`mañá`},
		`in 1 month`:   {`m seguinte`, `o próximo mes`},
		`in 1 week`:    {`a próxima semana`, `sem seguinte`},
		`in 1 year`:    {`o próximo ano`, `seguinte ano`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)hai (\d+) d`),
			regexp.MustCompile(`(?i)hai (\d+) día`),
			regexp.MustCompile(`(?i)hai (\d+) días`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)hai (\d+) h`),
			regexp.MustCompile(`(?i)hai (\d+) hora`),
			regexp.MustCompile(`(?i)hai (\d+) horas`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)hai (\d+) min`),
			regexp.MustCompile(`(?i)hai (\d+) minuto`),
			regexp.MustCompile(`(?i)hai (\d+) minutos`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)hai (\d+) m`),
			regexp.MustCompile(`(?i)hai (\d+) mes`),
			regexp.MustCompile(`(?i)hai (\d+) meses`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)hai (\d+) s`),
			regexp.MustCompile(`(?i)hai (\d+) segundo`),
			regexp.MustCompile(`(?i)hai (\d+) segundos`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)hai (\d+) sem`),
			regexp.MustCompile(`(?i)hai (\d+) semana`),
			regexp.MustCompile(`(?i)hai (\d+) semanas`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)hai (\d+) a`),
			regexp.MustCompile(`(?i)hai (\d+) ano`),
			regexp.MustCompile(`(?i)hai (\d+) anos`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)en (\d+) d`),
			regexp.MustCompile(`(?i)en (\d+) día`),
			regexp.MustCompile(`(?i)en (\d+) días`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)en (\d+) h`),
			regexp.MustCompile(`(?i)en (\d+) hora`),
			regexp.MustCompile(`(?i)en (\d+) horas`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)en (\d+) min`),
			regexp.MustCompile(`(?i)en (\d+) minuto`),
			regexp.MustCompile(`(?i)en (\d+) minutos`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)en (\d+) m`),
			regexp.MustCompile(`(?i)en (\d+) mes`),
			regexp.MustCompile(`(?i)en (\d+) meses`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)en (\d+) s`),
			regexp.MustCompile(`(?i)en (\d+) segundo`),
			regexp.MustCompile(`(?i)en (\d+) segundos`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)en (\d+) sem`),
			regexp.MustCompile(`(?i)en (\d+) semana`),
			regexp.MustCompile(`(?i)en (\d+) semanas`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)en (\d+) a`),
			regexp.MustCompile(`(?i)en (\d+) ano`),
			regexp.MustCompile(`(?i)en (\d+) anos`),
		},
	},
}
