// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var it_Locale = merge(nil, LocaleData{
	Name:      "it",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "circa", "e", "|"},
	Simplifications: []ReplacementData{
		{regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(\d+)\s+ora(\z|[^\pL\pM\d]|_)`), "${1}${2} ore${3}"},
	},
	Translations: map[string]string{
		"settembre": "september",
		"mercoledi": "wednesday",
		"settimana": "week",
		"settimane": "week",
		"dicembre":  "december",
		"febbraio":  "february",
		"novembre":  "november",
		"domenica":  "sunday",
		"venerdi":   "friday",
		"gennaio":   "january",
		"ottobre":   "october",
		"secondi":   "second",
		"secondo":   "second",
		"giovedi":   "thursday",
		"martedi":   "tuesday",
		"aprile":    "april",
		"agosto":    "august",
		"giorni":    "day",
		"giorno":    "day",
		"luglio":    "july",
		"giugno":    "june",
		"maggio":    "may",
		"minuti":    "minute",
		"minuto":    "minute",
		"lunedi":    "monday",
		"sabato":    "saturday",
		"circa":     "",
		"marzo":     "march",
		"mese":      "month",
		"mesi":      "month",
		"sett":      "week",
		"anni":      "year",
		"anno":      "year",
		"apr":       "april",
		"ago":       "august",
		"dic":       "december",
		"feb":       "february",
		"ven":       "friday",
		"gmt":       "gmt",
		"ora":       "hour",
		"ore":       "hour",
		"gen":       "january",
		"lug":       "july",
		"giu":       "june",
		"mar":       "march",
		"mag":       "may",
		"min":       "minute",
		"lun":       "monday",
		"nov":       "november",
		"ott":       "october",
		"sab":       "saturday",
		"sec":       "second",
		"set":       "september",
		"dom":       "sunday",
		"gio":       "thursday",
		"utc":       "utc",
		"mer":       "wednesday",
		"fa":        "ago",
		"am":        "am",
		"in":        "in",
		"pm":        "pm",
		"'":         "",
		",":         "",
		";":         "",
		"@":         "",
		"[":         "",
		"]":         "",
		"e":         "",
		"|":         "",
		" ":         " ",
		"+":         "+",
		"-":         "-",
		".":         ".",
		"/":         "/",
		":":         ":",
		"g":         "day",
		"h":         "hour",
		"m":         "minute",
		"s":         "second",
		"z":         "z",
	},
	RelativeType: map[string]string{
		"settimana prossima": "in 1 week",
		"questa settimana":   "0 week ago",
		"settimana scorsa":   "1 week ago",
		"questo minuto":      "0 minute ago",
		"mese prossimo":      "in 1 month",
		"anno prossimo":      "in 1 year",
		"questo mese":        "0 month ago",
		"mese scorso":        "1 month ago",
		"anno scorso":        "1 year ago",
		"quest'anno":         "0 year ago",
		"altro ieri":         "2 day ago",
		"quest'ora":          "0 hour ago",
		"domani":             "in 1 day",
		"oggi":               "0 day ago",
		"ieri":               "1 day ago",
		"ora":                "0 second ago",
	},
	RelativeTypeRegexes: []ReplacementData{
		{regexp.MustCompile(`(?i)tra (\d+) settimana`), "in $1 week"},
		{regexp.MustCompile(`(?i)tra (\d+) settimane`), "in $1 week"},
		{regexp.MustCompile(`(?i)(\d+) settimana fa`), "$1 week ago"},
		{regexp.MustCompile(`(?i)(\d+) settimane fa`), "$1 week ago"},
		{regexp.MustCompile(`(?i)tra (\d+) secondi`), "in $1 second"},
		{regexp.MustCompile(`(?i)tra (\d+) secondo`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+) secondi fa`), "$1 second ago"},
		{regexp.MustCompile(`(?i)(\d+) secondo fa`), "$1 second ago"},
		{regexp.MustCompile(`(?i)tra (\d+) giorni`), "in $1 day"},
		{regexp.MustCompile(`(?i)tra (\d+) giorno`), "in $1 day"},
		{regexp.MustCompile(`(?i)tra (\d+) minuti`), "in $1 minute"},
		{regexp.MustCompile(`(?i)tra (\d+) minuto`), "in $1 minute"},
		{regexp.MustCompile(`(?i)(\d+) giorni fa`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+) giorno fa`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+) minuti fa`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)(\d+) minuto fa`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)tra (\d+) mese`), "in $1 month"},
		{regexp.MustCompile(`(?i)tra (\d+) mesi`), "in $1 month"},
		{regexp.MustCompile(`(?i)tra (\d+) sett`), "in $1 week"},
		{regexp.MustCompile(`(?i)tra (\d+) anni`), "in $1 year"},
		{regexp.MustCompile(`(?i)tra (\d+) anno`), "in $1 year"},
		{regexp.MustCompile(`(?i)(\d+) mese fa`), "$1 month ago"},
		{regexp.MustCompile(`(?i)(\d+) mesi fa`), "$1 month ago"},
		{regexp.MustCompile(`(?i)(\d+) sett fa`), "$1 week ago"},
		{regexp.MustCompile(`(?i)(\d+) anni fa`), "$1 year ago"},
		{regexp.MustCompile(`(?i)(\d+) anno fa`), "$1 year ago"},
		{regexp.MustCompile(`(?i)tra (\d+) ora`), "in $1 hour"},
		{regexp.MustCompile(`(?i)tra (\d+) ore`), "in $1 hour"},
		{regexp.MustCompile(`(?i)tra (\d+) min`), "in $1 minute"},
		{regexp.MustCompile(`(?i)tra (\d+) sec`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+) ora fa`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) ore fa`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) min fa`), "$1 minute ago"},
		{regexp.MustCompile(`(?i)(\d+) sec fa`), "$1 second ago"},
		{regexp.MustCompile(`(?i)tra (\d+) gg`), "in $1 day"},
		{regexp.MustCompile(`(?i)(\d+) gg fa`), "$1 day ago"},
		{regexp.MustCompile(`(?i)tra (\d+) g`), "in $1 day"},
		{regexp.MustCompile(`(?i)tra (\d+) h`), "in $1 hour"},
		{regexp.MustCompile(`(?i)tra (\d+) s`), "in $1 second"},
		{regexp.MustCompile(`(?i)(\d+) g fa`), "$1 day ago"},
		{regexp.MustCompile(`(?i)(\d+) h fa`), "$1 hour ago"},
		{regexp.MustCompile(`(?i)(\d+) s fa`), "$1 second ago"},
	},
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(settimana prossima|questa settimana|settimana scorsa|anno prossimo|mese prossimo|questo minuto|anno scorso|mese scorso|questo mese|altro ieri|quest'anno|mercoledi|quest'ora|settembre|settimana|settimane|dicembre|domenica|febbraio|novembre|gennaio|giovedi|martedi|ottobre|secondi|secondo|venerdi|agosto|aprile|domani|giorni|giorno|giugno|luglio|lunedi|maggio|minuti|minuto|sabato|circa|marzo|anni|anno|ieri|mese|mesi|oggi|sett|ago|apr|dic|dom|feb|gen|gio|giu|gmt|lug|lun|mag|mar|mer|min|nov|ora|ora|ore|ott|sab|sec|set|utc|ven|\+|\.|\[|\]|\||am|fa|in|pm| |'|,|-|/|:|;|@|e|g|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var it_CH_Locale = merge(&it_Locale, LocaleData{
	Name:            "it-CH",
	DateOrder:       "DMY",
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(settimana prossima|questa settimana|settimana scorsa|anno prossimo|mese prossimo|questo minuto|anno scorso|mese scorso|questo mese|altro ieri|quest'anno|mercoledi|quest'ora|settembre|settimana|settimane|dicembre|domenica|febbraio|novembre|gennaio|giovedi|martedi|ottobre|secondi|secondo|venerdi|agosto|aprile|domani|giorni|giorno|giugno|luglio|lunedi|maggio|minuti|minuto|sabato|circa|marzo|anni|anno|ieri|mese|mesi|oggi|sett|ago|apr|dic|dom|feb|gen|gio|giu|gmt|lug|lun|mag|mar|mer|min|nov|ora|ora|ore|ott|sab|sec|set|utc|ven|\+|\.|\[|\]|\||am|fa|in|pm| |'|,|-|/|:|;|@|e|g|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var it_SM_Locale = merge(&it_Locale, LocaleData{
	Name:            "it-SM",
	DateOrder:       "DMY",
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(settimana prossima|questa settimana|settimana scorsa|anno prossimo|mese prossimo|questo minuto|anno scorso|mese scorso|questo mese|altro ieri|quest'anno|mercoledi|quest'ora|settembre|settimana|settimane|dicembre|domenica|febbraio|novembre|gennaio|giovedi|martedi|ottobre|secondi|secondo|venerdi|agosto|aprile|domani|giorni|giorno|giugno|luglio|lunedi|maggio|minuti|minuto|sabato|circa|marzo|anni|anno|ieri|mese|mesi|oggi|sett|ago|apr|dic|dom|feb|gen|gio|giu|gmt|lug|lun|mag|mar|mer|min|nov|ora|ora|ore|ott|sab|sec|set|utc|ven|\+|\.|\[|\]|\||am|fa|in|pm| |'|,|-|/|:|;|@|e|g|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})

var it_VA_Locale = merge(&it_Locale, LocaleData{
	Name:            "it-VA",
	DateOrder:       "DMY",
	RxCombined:      regexp.MustCompile(`(?i)(\A|[^\pL\pM\d]|_)(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)(\z|[^\pL\pM\d]|_)`),
	RxExactCombined: regexp.MustCompile(`(?i)^(tra \d+ settimana|tra \d+ settimane|\d+ settimana fa|\d+ settimane fa|tra \d+ secondi|tra \d+ secondo|\d+ secondi fa|\d+ secondo fa|tra \d+ giorni|tra \d+ giorno|tra \d+ minuti|tra \d+ minuto|\d+ giorni fa|\d+ giorno fa|\d+ minuti fa|\d+ minuto fa|tra \d+ anni|tra \d+ anno|tra \d+ mese|tra \d+ mesi|tra \d+ sett|\d+ anni fa|\d+ anno fa|\d+ mese fa|\d+ mesi fa|\d+ sett fa|tra \d+ min|tra \d+ ora|tra \d+ ore|tra \d+ sec|\d+ min fa|\d+ ora fa|\d+ ore fa|\d+ sec fa|tra \d+ gg|\d+ gg fa|tra \d+ g|tra \d+ h|tra \d+ s|\d+ g fa|\d+ h fa|\d+ s fa)$`),
	RxKnownWords:    regexp.MustCompile(`(?i)^(.*?(?:\A|[^\pL\pM\d]|_|\d))(settimana prossima|questa settimana|settimana scorsa|anno prossimo|mese prossimo|questo minuto|anno scorso|mese scorso|questo mese|altro ieri|quest'anno|mercoledi|quest'ora|settembre|settimana|settimane|dicembre|domenica|febbraio|novembre|gennaio|giovedi|martedi|ottobre|secondi|secondo|venerdi|agosto|aprile|domani|giorni|giorno|giugno|luglio|lunedi|maggio|minuti|minuto|sabato|circa|marzo|anni|anno|ieri|mese|mesi|oggi|sett|ago|apr|dic|dom|feb|gen|gio|giu|gmt|lug|lun|mag|mar|mer|min|nov|ora|ora|ore|ott|sab|sec|set|utc|ven|\+|\.|\[|\]|\||am|fa|in|pm| |'|,|-|/|:|;|@|e|g|h|m|s|z)((?:\z|[^\pL\pM\d]|_|\d).*)$`),
})
