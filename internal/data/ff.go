// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var ff_Locale = LocaleData{
	Name:      "ff",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: map[*regexp.Regexp]string{
		regexp.MustCompile(`(\A|\W|_)hannde(\z|\W|_)`):      "${1}0 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`):   "${1}0 hour ago${2}",
		regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`): "${1}0 minute ago${2}",
		regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`):  "${1}0 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`):         "${1}0 second ago${2}",
		regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`):   "${1}0 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`):   "${1}0 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)haŋki(\z|\W|_)`):       "${1}1 day ago${2}",
		regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`):  "${1}1 month ago${2}",
		regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`):   "${1}1 week ago${2}",
		regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`):   "${1}1 year ago${2}",
		regexp.MustCompile(`(\A|\W|_)subaka(\z|\W|_)`):      "${1}am${2}",
		regexp.MustCompile(`(\A|\W|_)see(\z|\W|_)`):         "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)seeɗto(\z|\W|_)`):      "${1}april${2}",
		regexp.MustCompile(`(\A|\W|_)juk(\z|\W|_)`):         "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)juko(\z|\W|_)`):        "${1}august${2}",
		regexp.MustCompile(`(\A|\W|_)ñalnde(\z|\W|_)`):      "${1}day${2}",
		regexp.MustCompile(`(\A|\W|_)bow(\z|\W|_)`):         "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)bowte(\z|\W|_)`):       "${1}december${2}",
		regexp.MustCompile(`(\A|\W|_)col(\z|\W|_)`):         "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)colte(\z|\W|_)`):       "${1}february${2}",
		regexp.MustCompile(`(\A|\W|_)mawnde(\z|\W|_)`):      "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)mwd(\z|\W|_)`):         "${1}friday${2}",
		regexp.MustCompile(`(\A|\W|_)waktu(\z|\W|_)`):       "${1}hour${2}",
		regexp.MustCompile(`(\A|\W|_)jaŋngo(\z|\W|_)`):      "${1}in 1 day${2}",
		regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`):  "${1}in 1 month${2}",
		regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`):   "${1}in 1 week${2}",
		regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`):   "${1}in 1 year${2}",
		regexp.MustCompile(`(\A|\W|_)sii(\z|\W|_)`):         "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)siilo(\z|\W|_)`):       "${1}january${2}",
		regexp.MustCompile(`(\A|\W|_)mor(\z|\W|_)`):         "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)morso(\z|\W|_)`):       "${1}july${2}",
		regexp.MustCompile(`(\A|\W|_)kor(\z|\W|_)`):         "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)korse(\z|\W|_)`):       "${1}june${2}",
		regexp.MustCompile(`(\A|\W|_)mbo(\z|\W|_)`):         "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)mbooy(\z|\W|_)`):       "${1}march${2}",
		regexp.MustCompile(`(\A|\W|_)duu(\z|\W|_)`):         "${1}may${2}",
		regexp.MustCompile(`(\A|\W|_)duujal(\z|\W|_)`):      "${1}may${2}",
		regexp.MustCompile(`(\A|\W|_)aaɓ(\z|\W|_)`):         "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)aaɓnde(\z|\W|_)`):      "${1}monday${2}",
		regexp.MustCompile(`(\A|\W|_)lewru(\z|\W|_)`):       "${1}month${2}",
		regexp.MustCompile(`(\A|\W|_)jol(\z|\W|_)`):         "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)jolal(\z|\W|_)`):       "${1}november${2}",
		regexp.MustCompile(`(\A|\W|_)yar(\z|\W|_)`):         "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)yarkomaa(\z|\W|_)`):    "${1}october${2}",
		regexp.MustCompile(`(\A|\W|_)kikiiɗe(\z|\W|_)`):     "${1}pm${2}",
		regexp.MustCompile(`(\A|\W|_)hbi(\z|\W|_)`):         "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)hoore-biir(\z|\W|_)`):  "${1}saturday${2}",
		regexp.MustCompile(`(\A|\W|_)majaango(\z|\W|_)`):    "${1}second${2}",
		regexp.MustCompile(`(\A|\W|_)siilto(\z|\W|_)`):      "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)slt(\z|\W|_)`):         "${1}september${2}",
		regexp.MustCompile(`(\A|\W|_)dew(\z|\W|_)`):         "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)dewo(\z|\W|_)`):        "${1}sunday${2}",
		regexp.MustCompile(`(\A|\W|_)naa(\z|\W|_)`):         "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)naasaande(\z|\W|_)`):   "${1}thursday${2}",
		regexp.MustCompile(`(\A|\W|_)maw(\z|\W|_)`):         "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)mawbaare(\z|\W|_)`):    "${1}tuesday${2}",
		regexp.MustCompile(`(\A|\W|_)nje(\z|\W|_)`):         "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)njeslaare(\z|\W|_)`):   "${1}wednesday${2}",
		regexp.MustCompile(`(\A|\W|_)yontere(\z|\W|_)`):     "${1}week${2}",
		regexp.MustCompile(`(\A|\W|_)hitaande(\z|\W|_)`):    "${1}year${2}",
	},
}

var ff_CM_Locale = LocaleData{
	Name:      "ff-CM",
	Parent:    &ff_Locale,
	DateOrder: "DMY",
}

var ff_GN_Locale = LocaleData{
	Name:      "ff-GN",
	Parent:    &ff_Locale,
	DateOrder: "DMY",
}

var ff_MR_Locale = LocaleData{
	Name:      "ff-MR",
	Parent:    &ff_Locale,
	DateOrder: "DMY",
}
