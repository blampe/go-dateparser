// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var kw_Locale = LocaleData{
	Name:      "kw",
	DateOrder: "YMD",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: []ReplacementData{
		{regexp.MustCompile(`(\A|\W|_)mis gortheren(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis gwynngala(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis kevardhu(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis metheven(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis hwevrer(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`), "${1}0 minute ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`), "${1}1 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis genver(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis meurth(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`), "${1}in 1 month${2}"},
		{regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`), "${1}0 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy gwener(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy merher(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy meurth(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy sadorn(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`), "${1}1 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`), "${1}1 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis ebrel(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis hedra(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`), "${1}in 1 week${2}"},
		{regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`), "${1}in 1 year${2}"},
		{regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`), "${1}0 hour ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`), "${1}0 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`), "${1}0 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)yesterday(\z|\W|_)`), "${1}1 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)tomorrow(\z|\W|_)`), "${1}in 1 day${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis est(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy lun(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy sul(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)dy yow(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis du(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)mis me(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)second(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)month(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)today(\z|\W|_)`), "${1}0 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)hour(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)week(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)year(\z|\W|_)`), "${1}year${2}"},
		{regexp.MustCompile(`(\A|\W|_)day(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)ebr(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)est(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)gen(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)gor(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)gwe(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)gwn(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)hed(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)hwe(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)kev(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)lun(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)met(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)meu(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)mhr(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mth(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`), "${1}0 second ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)sad(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)sul(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)yow(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)am(\z|\W|_)`), "${1}am${2}"},
		{regexp.MustCompile(`(\A|\W|_)du(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)me(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)pm(\z|\W|_)`), "${1}pm${2}"},
	},
}
