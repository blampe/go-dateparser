// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var da_Locale = LocaleData{
	Name:                  "da",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "cirka", "d", "kl", "|", "，"},
	January:               []string{"jan", "januar"},
	February:              []string{"feb", "februar"},
	March:                 []string{"mar", "marts"},
	April:                 []string{"apr", "april"},
	May:                   []string{"maj"},
	June:                  []string{"jun", "juni"},
	July:                  []string{"jul", "juli"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "september"},
	October:               []string{"okt", "oktober"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"man", "mandag"},
	Tuesday:               []string{"tir", "tirsdag"},
	Wednesday:             []string{"ons", "onsdag"},
	Thursday:              []string{"tor", "torsdag"},
	Friday:                []string{"fre", "fredag"},
	Saturday:              []string{"lør", "lørdag"},
	Sunday:                []string{"søn", "søndag"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"år"},
	Month:                 []string{"md", "måned", "måneder"},
	Week:                  []string{"uge", "uger"},
	Day:                   []string{"dag", "dage"},
	Hour:                  []string{"t", "time", "timer"},
	Minute:                []string{"min", "minut", "minutter"},
	Second:                []string{"s", "sek", "sekund", "sekunder"},
	In:                    []string{"i"},
	Ago:                   []string{"siden"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`i dag`},
		`0 hour ago`:   {`i den kommende time`},
		`0 minute ago`: {`i det kommende minut`},
		`0 month ago`:  {`denne md`, `denne måned`},
		`0 second ago`: {`nu`},
		`0 week ago`:   {`denne uge`},
		`0 year ago`:   {`i år`},
		`1 day ago`:    {`i går`},
		`1 month ago`:  {`sidste md`, `sidste måned`},
		`1 week ago`:   {`sidste uge`},
		`1 year ago`:   {`sidste år`},
		`in 1 day`:     {`i morgen`},
		`in 1 month`:   {`næste md`, `næste måned`},
		`in 1 week`:    {`næste uge`},
		`in 1 year`:    {`næste år`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)for (\d+) dag siden`),
			regexp.MustCompile(`(?i)for (\d+) dage siden`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)for (\d+) timer`),
			regexp.MustCompile(`(?i)for (\d+)\s*h`),
			regexp.MustCompile(`(?i)for (\d+) time siden`),
			regexp.MustCompile(`(?i)for (\d+) timer siden`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)for (\d+) minutter`),
			regexp.MustCompile(`(?i)for (\d+)\s*m`),
			regexp.MustCompile(`(?i)for (\d+) min siden`),
			regexp.MustCompile(`(?i)for (\d+) minut siden`),
			regexp.MustCompile(`(?i)for (\d+) minutter siden`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)for (\d+) md siden`),
			regexp.MustCompile(`(?i)for (\d+) mdr siden`),
			regexp.MustCompile(`(?i)for (\d+) måned siden`),
			regexp.MustCompile(`(?i)for (\d+) måneder siden`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)for (\d+) sekunder`),
			regexp.MustCompile(`(?i)for (\d+)\s*s`),
			regexp.MustCompile(`(?i)for (\d+) sek siden`),
			regexp.MustCompile(`(?i)for (\d+) sekund siden`),
			regexp.MustCompile(`(?i)for (\d+) sekunder siden`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)for (\d+) uge siden`),
			regexp.MustCompile(`(?i)for (\d+) uger siden`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)for (\d+) år siden`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)om (\d+) dag`),
			regexp.MustCompile(`(?i)om (\d+) dage`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)om (\d+) time`),
			regexp.MustCompile(`(?i)om (\d+) timer`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)om (\d+) min`),
			regexp.MustCompile(`(?i)om (\d+) minut`),
			regexp.MustCompile(`(?i)om (\d+) minutter`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)om (\d+) md`),
			regexp.MustCompile(`(?i)om (\d+) mdr`),
			regexp.MustCompile(`(?i)om (\d+) måned`),
			regexp.MustCompile(`(?i)om (\d+) måneder`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)om (\d+) sek`),
			regexp.MustCompile(`(?i)om (\d+) sekund`),
			regexp.MustCompile(`(?i)om (\d+) sekunder`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)om (\d+) uge`),
			regexp.MustCompile(`(?i)om (\d+) uger`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)om (\d+) år`),
		},
	},
	Simplifications: map[string]string{
		`(\d+)\s*hr(s?)`:           `\1 time\2`,
		`(\d+)\s*min(s?)`:          `\1 minut\2`,
		`(\d+)\s*sec(s?)`:          `\1 sekund\2`,
		`(\d+)h(\d+)m?`:            `\1:\2`,
		`en`:                       `1`,
		`et`:                       `1`,
		`middag`:                   `12:00`,
		`midnat`:                   `00:00`,
		`mindre end 1 minut siden`: `45 seconds`,
	},
}

var da_GL_Locale = LocaleData{
	Name:                  "da-GL",
	DateOrder:             "DMY",
	SentenceSplitterGroup: 1,
	SkipWords:             []string{"'", ",", "-", "/", ";", "@", "[", "]", "cirka", "d", "kl", "|", "，"},
	January:               []string{"jan", "januar"},
	February:              []string{"feb", "februar"},
	March:                 []string{"mar", "marts"},
	April:                 []string{"apr", "april"},
	May:                   []string{"maj"},
	June:                  []string{"jun", "juni"},
	July:                  []string{"jul", "juli"},
	August:                []string{"aug", "august"},
	September:             []string{"sep", "september"},
	October:               []string{"okt", "oktober"},
	November:              []string{"nov", "november"},
	December:              []string{"dec", "december"},
	Monday:                []string{"man", "mandag"},
	Tuesday:               []string{"tir", "tirsdag"},
	Wednesday:             []string{"ons", "onsdag"},
	Thursday:              []string{"tor", "torsdag"},
	Friday:                []string{"fre", "fredag"},
	Saturday:              []string{"lør", "lørdag"},
	Sunday:                []string{"søn", "søndag"},
	AM:                    []string{"am"},
	PM:                    []string{"pm"},
	Year:                  []string{"år"},
	Month:                 []string{"md", "måned", "måneder"},
	Week:                  []string{"uge", "uger"},
	Day:                   []string{"dag", "dage"},
	Hour:                  []string{"t", "time", "timer"},
	Minute:                []string{"min", "minut", "minutter"},
	Second:                []string{"s", "sek", "sekund", "sekunder"},
	In:                    []string{"i"},
	Ago:                   []string{"siden"},
	RelativeType: map[string][]string{
		`0 day ago`:    {`i dag`},
		`0 hour ago`:   {`i den kommende time`},
		`0 minute ago`: {`i det kommende minut`},
		`0 month ago`:  {`denne md`, `denne måned`},
		`0 second ago`: {`nu`},
		`0 week ago`:   {`denne uge`},
		`0 year ago`:   {`i år`},
		`1 day ago`:    {`i går`},
		`1 month ago`:  {`sidste md`, `sidste måned`},
		`1 week ago`:   {`sidste uge`},
		`1 year ago`:   {`sidste år`},
		`in 1 day`:     {`i morgen`},
		`in 1 month`:   {`næste md`, `næste måned`},
		`in 1 week`:    {`næste uge`},
		`in 1 year`:    {`næste år`},
	},
	RelativeTypeRegex: map[string][]*regexp.Regexp{
		`\1 day ago`: {
			regexp.MustCompile(`(?i)for (\d+) dag siden`),
			regexp.MustCompile(`(?i)for (\d+) dage siden`),
		},
		`\1 hour ago`: {
			regexp.MustCompile(`(?i)for (\d+) timer`),
			regexp.MustCompile(`(?i)for (\d+)\s*h`),
			regexp.MustCompile(`(?i)for (\d+) time siden`),
			regexp.MustCompile(`(?i)for (\d+) timer siden`),
		},
		`\1 minute ago`: {
			regexp.MustCompile(`(?i)for (\d+) minutter`),
			regexp.MustCompile(`(?i)for (\d+)\s*m`),
			regexp.MustCompile(`(?i)for (\d+) min siden`),
			regexp.MustCompile(`(?i)for (\d+) minut siden`),
			regexp.MustCompile(`(?i)for (\d+) minutter siden`),
		},
		`\1 month ago`: {
			regexp.MustCompile(`(?i)for (\d+) md siden`),
			regexp.MustCompile(`(?i)for (\d+) mdr siden`),
			regexp.MustCompile(`(?i)for (\d+) måned siden`),
			regexp.MustCompile(`(?i)for (\d+) måneder siden`),
		},
		`\1 second ago`: {
			regexp.MustCompile(`(?i)for (\d+) sekunder`),
			regexp.MustCompile(`(?i)for (\d+)\s*s`),
			regexp.MustCompile(`(?i)for (\d+) sek siden`),
			regexp.MustCompile(`(?i)for (\d+) sekund siden`),
			regexp.MustCompile(`(?i)for (\d+) sekunder siden`),
		},
		`\1 week ago`: {
			regexp.MustCompile(`(?i)for (\d+) uge siden`),
			regexp.MustCompile(`(?i)for (\d+) uger siden`),
		},
		`\1 year ago`: {
			regexp.MustCompile(`(?i)for (\d+) år siden`),
		},
		`in \1 day`: {
			regexp.MustCompile(`(?i)om (\d+) dag`),
			regexp.MustCompile(`(?i)om (\d+) dage`),
		},
		`in \1 hour`: {
			regexp.MustCompile(`(?i)om (\d+) time`),
			regexp.MustCompile(`(?i)om (\d+) timer`),
		},
		`in \1 minute`: {
			regexp.MustCompile(`(?i)om (\d+) min`),
			regexp.MustCompile(`(?i)om (\d+) minut`),
			regexp.MustCompile(`(?i)om (\d+) minutter`),
		},
		`in \1 month`: {
			regexp.MustCompile(`(?i)om (\d+) md`),
			regexp.MustCompile(`(?i)om (\d+) mdr`),
			regexp.MustCompile(`(?i)om (\d+) måned`),
			regexp.MustCompile(`(?i)om (\d+) måneder`),
		},
		`in \1 second`: {
			regexp.MustCompile(`(?i)om (\d+) sek`),
			regexp.MustCompile(`(?i)om (\d+) sekund`),
			regexp.MustCompile(`(?i)om (\d+) sekunder`),
		},
		`in \1 week`: {
			regexp.MustCompile(`(?i)om (\d+) uge`),
			regexp.MustCompile(`(?i)om (\d+) uger`),
		},
		`in \1 year`: {
			regexp.MustCompile(`(?i)om (\d+) år`),
		},
	},
	Simplifications: map[string]string{
		`(\d+)\s*hr(s?)`:           `\1 time\2`,
		`(\d+)\s*min(s?)`:          `\1 minut\2`,
		`(\d+)\s*sec(s?)`:          `\1 sekund\2`,
		`(\d+)h(\d+)m?`:            `\1:\2`,
		`en`:                       `1`,
		`et`:                       `1`,
		`middag`:                   `12:00`,
		`midnat`:                   `00:00`,
		`mindre end 1 minut siden`: `45 seconds`,
	},
}
