// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var luo_Locale = LocaleData{
	Name:      "luo",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: []ReplacementData{
		{regexp.MustCompile(`(\A|\W|_)dwe mar apar gi ariyo(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar gi achiel(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar abiriyo(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar ang'wen(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar auchiel(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)nyiriri mar saa(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar achiel(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar ochiko(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar abich(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar aboro(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar ariyo(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar adek(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe mar apar(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)tich ang'wen(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`), "${1}0 minute ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`), "${1}1 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`), "${1}in 1 month${2}"},
		{regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`), "${1}0 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)tich abich(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)tich ariyo(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`), "${1}1 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`), "${1}1 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`), "${1}in 1 week${2}"},
		{regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`), "${1}in 1 year${2}"},
		{regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`), "${1}0 hour ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`), "${1}0 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`), "${1}0 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)tich adek(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)wuok tich(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)chieng'(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)jumapil(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)kawuono(\z|\W|_)`), "${1}0 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)ngeso(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)nyoro(\z|\W|_)`), "${1}1 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)higa(\z|\W|_)`), "${1}year${2}"},
		{regexp.MustCompile(`(\A|\W|_)juma(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)kiny(\z|\W|_)`), "${1}in 1 day${2}"},
		{regexp.MustCompile(`(\A|\W|_)dab(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)dac(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)dad(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)dag(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)dah(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)dan(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)dao(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)dap(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)dar(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)dau(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)dgi(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)doc(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)dwe(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)jmp(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)ngs(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`), "${1}0 second ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)saa(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)tab(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)tad(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)tan(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)tar(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)wut(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)od(\z|\W|_)`), "${1}am${2}"},
		{regexp.MustCompile(`(\A|\W|_)ot(\z|\W|_)`), "${1}pm${2}"},
	},
}
