// Code is generated by script; DO NOT EDIT.

package data

import "regexp"

var mfe_Locale = LocaleData{
	Name:      "mfe",
	DateOrder: "DMY",
	SkipWords: []string{"'", ",", "-", ".", "/", ";", "@", "[", "]", "|"},
	Translations: []ReplacementData{
		{regexp.MustCompile(`(\A|\W|_)this minute(\z|\W|_)`), "${1}0 minute ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last month(\z|\W|_)`), "${1}1 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next month(\z|\W|_)`), "${1}in 1 month${2}"},
		{regexp.MustCompile(`(\A|\W|_)this month(\z|\W|_)`), "${1}0 month ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last week(\z|\W|_)`), "${1}1 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)last year(\z|\W|_)`), "${1}1 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)next week(\z|\W|_)`), "${1}in 1 week${2}"},
		{regexp.MustCompile(`(\A|\W|_)next year(\z|\W|_)`), "${1}in 1 year${2}"},
		{regexp.MustCompile(`(\A|\W|_)this hour(\z|\W|_)`), "${1}0 hour ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this week(\z|\W|_)`), "${1}0 week ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)this year(\z|\W|_)`), "${1}0 year ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)merkredi(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)vandredi(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)fevriye(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)dimans(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)segonn(\z|\W|_)`), "${1}second${2}"},
		{regexp.MustCompile(`(\A|\W|_)semenn(\z|\W|_)`), "${1}week${2}"},
		{regexp.MustCompile(`(\A|\W|_)septam(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)zanvie(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)avril(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)demin(\z|\W|_)`), "${1}in 1 day${2}"},
		{regexp.MustCompile(`(\A|\W|_)desam(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)lindi(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mardi(\z|\W|_)`), "${1}tuesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)novam(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)oktob(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)samdi(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)zilye(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)zordi(\z|\W|_)`), "${1}0 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)lane(\z|\W|_)`), "${1}year${2}"},
		{regexp.MustCompile(`(\A|\W|_)mars(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)zedi(\z|\W|_)`), "${1}thursday${2}"},
		{regexp.MustCompile(`(\A|\W|_)zour(\z|\W|_)`), "${1}day${2}"},
		{regexp.MustCompile(`(\A|\W|_)avr(\z|\W|_)`), "${1}april${2}"},
		{regexp.MustCompile(`(\A|\W|_)des(\z|\W|_)`), "${1}december${2}"},
		{regexp.MustCompile(`(\A|\W|_)dim(\z|\W|_)`), "${1}sunday${2}"},
		{regexp.MustCompile(`(\A|\W|_)fev(\z|\W|_)`), "${1}february${2}"},
		{regexp.MustCompile(`(\A|\W|_)ler(\z|\W|_)`), "${1}hour${2}"},
		{regexp.MustCompile(`(\A|\W|_)lin(\z|\W|_)`), "${1}monday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mar(\z|\W|_)`), "${1}march${2}"},
		{regexp.MustCompile(`(\A|\W|_)mer(\z|\W|_)`), "${1}wednesday${2}"},
		{regexp.MustCompile(`(\A|\W|_)mwa(\z|\W|_)`), "${1}month${2}"},
		{regexp.MustCompile(`(\A|\W|_)nov(\z|\W|_)`), "${1}november${2}"},
		{regexp.MustCompile(`(\A|\W|_)now(\z|\W|_)`), "${1}0 second ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)okt(\z|\W|_)`), "${1}october${2}"},
		{regexp.MustCompile(`(\A|\W|_)out(\z|\W|_)`), "${1}august${2}"},
		{regexp.MustCompile(`(\A|\W|_)sam(\z|\W|_)`), "${1}saturday${2}"},
		{regexp.MustCompile(`(\A|\W|_)sep(\z|\W|_)`), "${1}september${2}"},
		{regexp.MustCompile(`(\A|\W|_)van(\z|\W|_)`), "${1}friday${2}"},
		{regexp.MustCompile(`(\A|\W|_)yer(\z|\W|_)`), "${1}1 day ago${2}"},
		{regexp.MustCompile(`(\A|\W|_)zan(\z|\W|_)`), "${1}january${2}"},
		{regexp.MustCompile(`(\A|\W|_)zil(\z|\W|_)`), "${1}july${2}"},
		{regexp.MustCompile(`(\A|\W|_)zin(\z|\W|_)`), "${1}june${2}"},
		{regexp.MustCompile(`(\A|\W|_)am(\z|\W|_)`), "${1}am${2}"},
		{regexp.MustCompile(`(\A|\W|_)me(\z|\W|_)`), "${1}may${2}"},
		{regexp.MustCompile(`(\A|\W|_)pm(\z|\W|_)`), "${1}pm${2}"},
		{regexp.MustCompile(`(\A|\W|_)ze(\z|\W|_)`), "${1}thursday${2}"},
	},
}
